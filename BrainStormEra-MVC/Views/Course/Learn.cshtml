@model DataAccessLayer.Models.ViewModels.LearnManagementViewModel
@{
    ViewData["Title"] = "Learn - " + Model.CourseName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/pages/Course/learn-management.css" />
<link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css">
<div class="learn-management-container">
    <!-- Course Header -->
    <div class="course-header">
        <div class="course-info" data-course-id="@ViewBag.CourseId">
            <div class="course-image">
                <img src="@Model.CourseImage" alt="@Model.CourseName" onerror="handleImageError(this)">
            </div>
            <div class="course-details">
                <h1 class="course-title">@Model.CourseName</h1>
                <p class="course-description">@Model.CourseDescription</p>
                <p class="course-author">by @Model.AuthorName</p>
                <div class="progress-info">
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: @Model.ProgressPercentage%"></div>
                    </div>
                    <span class="progress-text">@Model.ProgressPercentage% Complete</span>
                </div>
                <div class="course-stats">
                    <div class="stat">
                        <i class="fas fa-list"></i>
                        <span>@Model.TotalChapters Chapters</span>
                    </div>
                    <div class="stat">
                        <i class="fas fa-play-circle"></i>
                        <span>@Model.TotalLessons Lessons</span>
                    </div>
                    <div class="stat">
                        <i class="fas fa-check-circle"></i>
                        <span>@Model.CompletedLessons Completed</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Course Content -->
    <div class="course-content">
        @if (Model.Chapters.Any())
        {
            <div class="accordion" id="courseChaptersAccordion">
                @foreach (var chapter in Model.Chapters)
                {
                    <div class="accordion-item chapter-accordion @(chapter.IsLocked ? "locked" : "")">
                        <h2 class="accordion-header" id="chapter-@chapter.ChapterOrder">
                            <button class="accordion-button @(chapter.ChapterOrder != 1 ? "collapsed" : "")" 
                                    type="button" 
                                    data-bs-toggle="collapse" 
                                    data-bs-target="#collapse-chapter-@chapter.ChapterOrder" 
                                    aria-expanded="@(chapter.ChapterOrder == 1 ? "true" : "false")" 
                                    aria-controls="collapse-chapter-@chapter.ChapterOrder"
                                    @(chapter.IsLocked ? "disabled" : "")>
                                <div class="chapter-header-content">
                                    <div class="chapter-title-section">
                                        <span class="chapter-number">Chapter @chapter.ChapterOrder</span>
                                        <h3 class="chapter-title">@chapter.ChapterName</h3>
                                        @if (chapter.IsLocked)
                                        {
                                            <i class="fas fa-lock chapter-lock ms-2"></i>
                                        }
                                        else if (chapter.IsCompleted)
                                        {
                                            <i class="fas fa-check-circle chapter-completed ms-2"></i>
                                        }
                                    </div>
                                    <div class="chapter-stats">
                                        <span class="lesson-count">@chapter.Lessons.Count lessons</span>
                                        <div class="chapter-progress-mini">
                                            <div class="progress-bar-mini">
                                                <div class="progress-fill-mini" style="width: @chapter.CompletionPercentage%"></div>
                                            </div>
                                            <span class="progress-text-mini">@chapter.CompletionPercentage%</span>
                                        </div>
                                    </div>
                                </div>
                            </button>
                        </h2>
                        <div id="collapse-chapter-@chapter.ChapterOrder" 
                             class="accordion-collapse collapse @(chapter.ChapterOrder == 1 ? "show" : "")" 
                             aria-labelledby="chapter-@chapter.ChapterOrder" 
                             data-bs-parent="#courseChaptersAccordion">
                            <div class="accordion-body">
                                @if (!string.IsNullOrEmpty(chapter.ChapterDescription))
                                {
                                    <div class="chapter-description-section">
                                        <p class="chapter-description">@chapter.ChapterDescription</p>
                                    </div>
                                }

                                @if (chapter.Lessons.Any())
                                {
                                    <div class="lessons-list">
                                        @foreach (var lesson in chapter.Lessons)
                                        {
                                            <div class="lesson-item @(lesson.IsLocked ? "locked" : "") @(lesson.IsCompleted ? "completed" : "")">
                                                <div class="lesson-content">
                                                    <div class="lesson-icon">
                                                        <i class="@lesson.LessonTypeIcon"></i>
                                                    </div>
                                                    <div class="lesson-info">
                                                        <div class="lesson-header">
                                                            <h4 class="lesson-title">
                                                                @lesson.LessonName
                                                                @if (lesson.IsMandatory)
                                                                {
                                                                    <span class="mandatory-badge">Required</span>
                                                                }
                                                            </h4>
                                                            <div class="lesson-meta">
                                                                <span class="lesson-type">@lesson.LessonType</span>
                                                                @if (lesson.EstimatedDuration > 0)
                                                                {
                                                                    <span class="lesson-duration">
                                                                        <i class="fas fa-clock"></i>
                                                                        @lesson.EstimatedDuration min
                                                                    </span>
                                                                }
                                                            </div>
                                                        </div>
                                                        @if (!string.IsNullOrEmpty(lesson.LessonDescription))
                                                        {
                                                            <p class="lesson-description">@lesson.LessonDescription</p>
                                                        }
                                                        @if (lesson.ProgressPercentage > 0)
                                                        {
                                                            <div class="lesson-progress">
                                                                <div class="progress-bar mini">
                                                                    <div class="progress-fill" style="width: @lesson.ProgressPercentage%"></div>
                                                                </div>
                                                                <span class="progress-text">@lesson.ProgressPercentage%</span>
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="lesson-actions">
                                                        @if (lesson.IsLocked)
                                                        {
                                                            <button class="btn btn-locked" disabled>
                                                                <i class="fas fa-lock"></i>
                                                                Locked
                                                            </button>
                                                        }
                                                        else if (lesson.IsCompleted)
                                                        {
                                                            <button class="btn btn-completed">
                                                                <i class="fas fa-check"></i>
                                                                Completed
                                                            </button>
                                                            <button class="btn btn-review" onclick="startLesson('@lesson.LessonId')">
                                                                <i class="fas fa-redo"></i>
                                                                Review
                                                            </button>
                                                        }
                                                        else
                                                        {
                                                            <button class="btn btn-start" onclick="startLesson('@lesson.LessonId')">
                                                                <i class="fas fa-play"></i>
                                                                Start
                                                            </button>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="no-lessons">
                                        <p>No lessons available in this chapter yet.</p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="no-content">
                <div class="no-content-icon">
                    <i class="fas fa-book-open"></i>
                </div>
                <h3>No Content Available</h3>
                <p>This course doesn't have any chapters or lessons yet. Please check back later.</p>
            </div>
        }
    </div>
</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/components/toast-notifications.js"></script>

<script>
    function startLesson(lessonHashId) {
        // Redirect to lesson learning page with already encoded hash ID
        window.location.href = '@Url.Action("Learn", "Lesson")' + '?id=' + encodeURIComponent(lessonHashId);
    }

    function handleImageError(img) {
        img.src = '/SharedMedia/defaults/default-course.png';
    }
    
    // Check for lesson completion updates when page loads
    document.addEventListener('DOMContentLoaded', function() {
        checkForLessonCompletion();
        
        // Also check periodically for updates from lesson learning page
        setInterval(checkForLessonCompletion, 2000);
    });
    
    function checkForLessonCompletion() {
        const courseId = getCourseIdFromPage();
        if (!courseId) return;
        
        const completionKey = `lesson_completed_${courseId}`;
        const completionData = sessionStorage.getItem(completionKey);
        
        if (completionData) {
            try {
                const data = JSON.parse(completionData);
                if (data.needsRefresh && data.courseId === courseId) {
                    console.log('Detected lesson completion, refreshing course data...', data);
                    
                    // Mark as processed to avoid multiple refreshes
                    data.needsRefresh = false;
                    sessionStorage.setItem(completionKey, JSON.stringify(data));
                    
                    // Refresh course data
                    refreshCourseData(courseId);
                }
            } catch (e) {
                console.error('Error parsing completion data:', e);
                sessionStorage.removeItem(completionKey);
            }
        }
    }
    
    function getCourseIdFromPage() {
        // Try to get course ID from URL params
        const urlParams = new URLSearchParams(window.location.search);
        const courseId = urlParams.get('courseId');
        if (courseId) return courseId;
        
        // Try to get from page data attributes
        const courseInfo = document.querySelector('[data-course-id]');
        if (courseInfo) return courseInfo.getAttribute('data-course-id');
        
        return null;
    }
    
    function refreshCourseData(courseId) {
        console.log('Refreshing course data for courseId:', courseId);
        
        // Show loading indicator
        showRefreshIndicator();
        
        // Fetch updated course data
        fetch(`/Course/GetCourseLearnData?courseId=${encodeURIComponent(courseId)}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            console.log('Received updated course data:', data);
            if (data.success) {
                updateCourseProgress(data.progressPercentage, data.completedLessons, data.totalLessons);
                updateLessonStatuses(data.chapters);
                hideRefreshIndicator();
                
                if (window.showToast) {
                    window.showToast('success', 'Course progress updated!');
                }
            } else {
                console.error('Failed to refresh course data:', data.message);
                hideRefreshIndicator();
            }
        })
        .catch(error => {
            console.error('Error refreshing course data:', error);
            hideRefreshIndicator();
            // Fallback to page reload if AJAX fails
            setTimeout(() => {
                window.location.reload();
            }, 1000);
        });
    }
    
    function updateCourseProgress(progressPercentage, completedLessons, totalLessons) {
        // Update main progress bar
        const progressFill = document.querySelector('.progress-info .progress-fill');
        if (progressFill) {
            progressFill.style.width = `${progressPercentage}%`;
        }
        
        // Update progress text
        const progressText = document.querySelector('.progress-info .progress-text');
        if (progressText) {
            progressText.textContent = `${progressPercentage}% Complete`;
        }
        
        // Update completed lessons count
        const completedStat = document.querySelector('.course-stats .stat:nth-child(3) span');
        if (completedStat) {
            completedStat.textContent = `${completedLessons} Completed`;
        }
        
        console.log(`Updated course progress: ${progressPercentage}% (${completedLessons}/${totalLessons})`);
    }
    
    function updateLessonStatuses(chapters) {
        if (!chapters || !Array.isArray(chapters)) return;
        
        chapters.forEach(chapter => {
            if (chapter.lessons && Array.isArray(chapter.lessons)) {
                chapter.lessons.forEach(lesson => {
                    const lessonElement = document.querySelector(`[onclick*="${lesson.lessonId}"]`);
                    if (lessonElement) {
                        // Update lesson completion status
                        if (lesson.isCompleted) {
                            lessonElement.classList.add('completed');
                            
                            // Update action buttons
                            const actionButtons = lessonElement.querySelector('.lesson-actions');
                            if (actionButtons && !actionButtons.querySelector('.btn-completed')) {
                                actionButtons.innerHTML = `
                                    <button class="btn btn-completed">
                                        <i class="fas fa-check"></i>
                                        Completed
                                    </button>
                                    <button class="btn btn-review" onclick="startLesson('${lesson.lessonId}')">
                                        <i class="fas fa-redo"></i>
                                        Review
                                    </button>
                                `;
                            }
                        }
                        
                        // Update progress if exists
                        if (lesson.progressPercentage !== undefined) {
                            const progressFill = lessonElement.querySelector('.progress-fill');
                            if (progressFill) {
                                progressFill.style.width = `${lesson.progressPercentage}%`;
                            }
                            const progressText = lessonElement.querySelector('.progress-text');
                            if (progressText) {
                                progressText.textContent = `${lesson.progressPercentage}%`;
                            }
                        }
                    }
                });
                
                // Update chapter progress
                const chapterProgress = document.querySelector(`#chapter-${chapter.chapterOrder} .progress-fill-mini`);
                if (chapterProgress) {
                    chapterProgress.style.width = `${chapter.completionPercentage}%`;
                }
                const chapterProgressText = document.querySelector(`#chapter-${chapter.chapterOrder} .progress-text-mini`);
                if (chapterProgressText) {
                    chapterProgressText.textContent = `${chapter.completionPercentage}%`;
                }
            }
        });
    }
    
    function showRefreshIndicator() {
        // Add a small loading indicator
        const progressInfo = document.querySelector('.progress-info');
        if (progressInfo && !progressInfo.querySelector('.refresh-indicator')) {
            const indicator = document.createElement('div');
            indicator.className = 'refresh-indicator';
            indicator.innerHTML = '<i class="fas fa-sync-alt fa-spin"></i>';
            indicator.style.cssText = 'position: absolute; top: 5px; right: 5px; color: #007bff; font-size: 12px;';
            progressInfo.style.position = 'relative';
            progressInfo.appendChild(indicator);
        }
    }
    
    function hideRefreshIndicator() {
        const indicator = document.querySelector('.refresh-indicator');
        if (indicator) {
            indicator.remove();
        }
    }
</script> 