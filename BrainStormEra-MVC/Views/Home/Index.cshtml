@model DataAccessLayer.Models.ViewModels.HomePageGuestViewModel
@using System.IO
@{
    ViewData["Title"] = "Home Page";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BrainStormEra</title>
    <meta name="description" content="BrainStormEra - The ultimate platform for online learning and skill development">
    <link rel="icon" type="image/x-icon" href="~/img/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css">
    <link rel="stylesheet" href="~/css/layouts/base.css">
    <link rel="stylesheet" href="~/css/components/header.css">
    <link rel="stylesheet" href="~/css/pages/Dashboard/instructor-dashboard.css">
    <link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css">
    <link rel="stylesheet" href="~/css/pages/HomePage/homePage.css">
    <link rel="stylesheet" href="~/css/pages/HomePage/landing_page.css">
    <link rel="stylesheet" href="~/css/components/placeholders.css">
    <link rel="stylesheet" href="~/css/components/loader.css">
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" as="style">
    <!-- Load page loader script -->
    <script src="~/js/components/loader.js"></script>
    <!-- Toast notifications CSS -->
    <link rel="stylesheet" href="~/css/components/toast-notifications.css">
</head>

<body>
    <!-- Display toast notifications from TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Page Loader -->
    <div class="page-loader">
        <div class="loader"></div>
    </div>

    <!-- Include Header partial view -->
    @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml")

    <div class="container">
        <!-- Header Section -->
        <div class="text-center mb-5 w-100 position-relative welcome-header-container">
            <div class="header-placeholder">
                <div class="logo-header-container">
                    <img src="~/img/logo/Main_Logo.jpg" alt="BrainStormEra Logo" class="logo-header-img"
                        onerror="this.onerror=null; this.src='/img/defaults/default-logo.svg';">
                </div>
                <div class="header-text">
                    <h1>Welcome to BrainStormEra</h1>
                    <div class="subtitle">Unlock Your Learning Potential</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Categories Section -->
    <div class="container">
        <div class="filters mb-3">
            <div class="categories d-flex justify-content-start p-2 rounded" style="font-size: 2.2rem;">
                Top Recommended Courses
            </div>
            <div class="mt-4">
                <button class="filter-btn active" onclick="filterCoursesByCategory('')">All</button>
                @if (Model?.Categories != null && Model.Categories.Any())
                {
                    @foreach (var category in Model.Categories)
                    {
                        <button class="filter-btn" onclick="filterCoursesByCategory('@category.CategoryName')">
                            @category.CategoryName (@category.CourseCount)
                        </button>
                    }
                }
            </div>
        </div>
    </div>

    <!-- Recommend Course Section -->
    <div class="container">
        @if (ViewBag.DatabaseError != null)
        {
            <div class="alert alert-danger" role="alert">
                <h4 class="alert-heading">Database Connection Error</h4>
                <p>@ViewBag.DatabaseError</p>
                <hr>
                <p class="mb-0">Please check your connection settings and try again.</p>
            </div>
        }
        else if (ViewBag.Error != null)
        {
            <div class="alert alert-warning" role="alert">
                <h4 class="alert-heading">Error</h4>
                <p>@ViewBag.Error</p>
            </div>
        }

        <div class="row justify-content-center mb-5">
            @if (Model?.RecommendedCourses != null && Model.RecommendedCourses.Any())
            {
                @foreach (var course in Model.RecommendedCourses)
                {
                    <div class="col-lg-4 col-md-6 col-sm-12 mb-4">
                        <div class="course-card" data-course-id="@course.CourseId"
                            data-categories='@Html.Raw(Json.Serialize(course.CourseCategories))'>
                            <div class="course-image">
                                <img src="@course.CoursePicture" alt="@course.CourseName" loading="lazy"
                                    onerror="this.onerror=null; this.src='/img/defaults/default-course.svg';">
                                @if (course.Price > 0)
                                {
                                    <div class="course-price">$@course.Price.ToString("N0")</div>
                                }
                                else
                                {
                                    <div class="course-price free">Free</div>
                                }
                            </div>
                            <div class="course-details">
                                <h3 class="course-title">@course.CourseName</h3>
                                <div class="course-categories">
                                    @foreach (var category in course.CourseCategories)
                                    {
                                        <span class="category-badge">@category</span>
                                    }
                                </div>
                                <p class="course-description">@(course.Description?.Length > 100 ?
                                                                course.Description.Substring(0, 100) + "..." : course.Description)</p>
                        <div class="course-meta">
                            <div class="instructor">
                                <i class="fas fa-user"></i>
                                <span>@course.CreatedBy</span>
                            </div>
                        </div>
                        <p class="course-students">@course.EnrollmentCount enrolled</p>
                        <div class="course-actions">
                            <a href="javascript:void(0);" onclick="viewDetailCourse('@course.CourseId')"
                                class="btn btn-sm btn-outline-info" title="View Course Details">
                                <i class="fas fa-eye"></i> Details
                            </a>
                            <a href="@Url.Action("Index", "Course")" class="btn btn-sm btn-outline-primary"
                                title="Explore All Courses">
                                <i class="fas fa-search"></i> Explore
                            </a>
                        </div>
                    </div>
                </div>
            </div>
                        }
            }
            else
            {
                <div class="col-12 text-center no-courses">
                    <i class="fas fa-book-open fa-3x mb-3"></i>
                    <p>No recommended courses available at the moment.</p>
                    <p>Please check back later or browse all courses.</p>
                </div>
            }
        </div>
    </div>

    <!-- Features Section -->
    <div class="container mt-5 mb-5">
        <div class="row features-section">
            <div class="col-md-4 mb-4">
                <div class="feature-card">
                    <i class="fas fa-laptop-code feature-icon"></i>
                    <h3>Learn Anywhere</h3>
                    <p>Access our courses from any device, anytime. Your learning journey is always at your fingertips.
                    </p>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="feature-card">
                    <i class="fas fa-certificate feature-icon"></i>
                    <h3>Get Certified</h3>
                    <p>Earn certificates upon course completion to showcase your new skills to employers.</p>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="feature-card">
                    <i class="fas fa-users feature-icon"></i>
                    <h3>Expert Instructors</h3>
                    <p>Learn from industry professionals with real-world experience in their respective fields.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Newsletter Section -->
    <div class="container-fluid newsletter-section py-5">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <h2 class="mb-3">Stay Updated with Our Newsletter</h2>
                    <p>Subscribe to get notified about new courses, special offers and educational content.</p>
                </div>
                <div class="col-lg-6">
                    <form class="newsletter-form d-flex">
                        <input type="email" class="form-control form-control-lg" placeholder="Your email address...">
                        <button type="submit" class="btn btn-primary btn-lg ms-2">Subscribe</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js" defer></script>
    <!-- Include toast notifications script -->
    <script src="~/js/shared/toast-notifications.js"></script>

    <script>
        // Hide preloader when page is loaded
        window.addEventListener('load', function () {
            document.querySelector('.page-loader').classList.add('loaded');
            setTimeout(() => {
                document.querySelector('.page-loader').style.display = 'none';
            }, 500);
        });

        // Change header style on scroll
        window.addEventListener('scroll', function () {
            if (window.scrollY > 50) {
                document.querySelector('.bse-sticky-header').classList.add('scrolled');
            } else {
                document.querySelector('.bse-sticky-header').classList.remove('scrolled');
            }
        });

        function viewDetailCourse(courseId) {
            // Store courseId in cookie
            document.cookie = "CourseId=" + courseId + "; path=/";

            // Redirect to course detail page
            window.location.href = "@Url.Action("CourseDetail", "Course")";
        }

        document.addEventListener("DOMContentLoaded", function () {
            // Enhanced star rating display
            const starElements = document.querySelectorAll('.stars');
            starElements.forEach(starElement => {
                const rating = parseInt(starElement.getAttribute('data-rating'));
                starElement.innerHTML = '?????'.split('').map((star, index) => {
                    return `<span style="color: ${index < rating ? '#ff9800' : '#e0e0e0'}">${star}</span>`;
                }).join('');
            });

            // Filter buttons
            const filterBtns = document.querySelectorAll('.filter-btn');
            filterBtns.forEach(button => {
                button.addEventListener('click', function () {
                    filterBtns.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                });
            });

            // Add animation classes to elements when they come into view
            const animateElements = document.querySelectorAll('.feature-card');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animated');
                        observer.unobserve(entry.target);
                    }
                });
            }, { threshold: 0.1 });

            animateElements.forEach(element => {
                observer.observe(element);
            });
        });

        function filterCoursesByCategory(categoryName = '') {
            // Get all course cards
            const courseCards = document.querySelectorAll('.course-card');
            const filterButtons = document.querySelectorAll('.filter-btn');

            // Update active button state
            filterButtons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');

            // Show loading animation
            courseCards.forEach(card => {
                card.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                card.style.opacity = '0.5';
                card.style.transform = 'scale(0.95)';
            });

            setTimeout(() => {
                courseCards.forEach(card => {
                    const courseCategories = JSON.parse(card.getAttribute('data-categories') || '[]');
                    const shouldShow = categoryName === '' || courseCategories.some(cat => cat === categoryName);

                    if (shouldShow) {
                        card.style.display = 'block';
                        card.style.opacity = '1';
                        card.style.transform = 'scale(1)';
                    } else {
                        card.style.display = 'none';
                    }
                });

                // Update results count
                const visibleCards = Array.from(courseCards).filter(card => card.style.display !== 'none');
                const resultsText = categoryName === '' ?
                    `Showing all ${courseCards.length} courses` :
                    `Showing ${visibleCards.length} courses in "${categoryName}" category`;

                // Add results info if it doesn't exist
                let resultsInfo = document.querySelector('.filter-results-info');
                if (!resultsInfo) {
                    resultsInfo = document.createElement('div');
                    resultsInfo.className = 'filter-results-info text-muted mt-3 mb-4';
                    const filterSection = document.querySelector('.filters');
                    filterSection.parentNode.insertBefore(resultsInfo, filterSection.nextSibling);
                }
                resultsInfo.textContent = resultsText;
            }, 300);
        }
    </script>
</body>

</html>
