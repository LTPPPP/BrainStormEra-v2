@model CourseNavigationViewModel

<div class="course-navigation">
    <div class="nav-header">
        <h4 class="nav-title">@Model.CourseName</h4>
        <div class="overall-progress">
            <div class="progress-info">
                <span>Overall Progress</span>
                <span class="progress-percentage">@Model.OverallProgress.ToString("F0")%</span>
            </div>
            <div class="progress-bar">
                <div class="progress-fill" style="width: @Model.OverallProgress%"></div>
            </div>
        </div>
    </div>

    <div class="nav-content">
        @foreach (var chapter in Model.Chapters.OrderBy(c => c.ChapterOrder))
        {
            <div class="nav-chapter @(chapter.IsCompleted ? "completed" : "") @(chapter.IsLocked ? "locked" : "")">
                <div class="chapter-header" onclick="toggleNavChapter('@chapter.ChapterId')">
                    <div class="chapter-info">
                        <div class="chapter-icon">
                            @if (chapter.IsLocked)
                            {
                                <i class="fas fa-lock"></i>
                            }
                            else if (chapter.IsCompleted)
                            {
                                <i class="fas fa-check-circle"></i>
                            }
                            else
                            {
                                <i class="fas fa-folder"></i>
                            }
                        </div>
                        <div class="chapter-details">
                            <h5 class="chapter-name">@chapter.ChapterName</h5>
                            <small class="chapter-progress">@chapter.CompletionPercentage.ToString("F0")% complete</small>
                        </div>
                    </div>
                    <i class="fas fa-chevron-down expand-icon"></i>
                </div>

                <div class="chapter-lessons" id="nav-chapter-@chapter.ChapterId" style="display: @(chapter.Lessons.Any(l => l.IsCurrent) ? "block" : "none")">
                    @foreach (var lesson in chapter.Lessons.OrderBy(l => l.LessonOrder))
                    {
                        <div class="nav-lesson @(lesson.IsCompleted ? "completed" : "") @(lesson.IsLocked ? "locked" : "") @(lesson.IsCurrent ? "current" : "")">
                            @if (lesson.IsLocked)
                            {
                                <div class="lesson-content">
                                    <div class="lesson-icon locked">
                                        <i class="fas fa-lock"></i>
                                    </div>
                                    <div class="lesson-info">
                                        <span class="lesson-name">@lesson.LessonName</span>
                                        <small class="lesson-type">@lesson.LessonTypeName</small>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <a href="@Url.ActionWithHash("Lesson", "Learning", lesson.LessonId)" class="lesson-link">
                                    <div class="lesson-content">
                                        <div class="lesson-icon">
                                            @if (lesson.IsCompleted)
                                            {
                                                <i class="fas fa-check-circle"></i>
                                            }
                                            else if (lesson.IsCurrent)
                                            {
                                                <i class="fas fa-play-circle"></i>
                                            }
                                            else
                                            {
                                                switch (lesson.LessonTypeName.ToLower())
                                                {
                                                    case "video":
                                                        <i class="fas fa-video"></i>
                                                        break;
                                                    case "text":
                                                        <i class="fas fa-file-alt"></i>
                                                        break;
                                                    case "interactive":
                                                        <i class="fas fa-mouse-pointer"></i>
                                                        break;
                                                    default:
                                                        <i class="fas fa-circle"></i>
                                                        break;
                                                }
                                            }
                                        </div>
                                        <div class="lesson-info">
                                            <span class="lesson-name">@lesson.LessonName</span>
                                            <div class="lesson-meta">
                                                <small class="lesson-type">@lesson.LessonTypeName</small>
                                                @if (lesson.HasQuiz)
                                                {
                                                    <small class="quiz-indicator">
                                                        <i class="fas fa-question-circle"></i>
                                                    </small>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<style>
/* Enhanced Coursera-style Navigation */
.course-navigation {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    height: 100%;
    display: flex;
    flex-direction: column;
}

.nav-header {
    padding: 20px;
    border-bottom: 1px solid #e5e7eb;
    background: #fff;
    flex-shrink: 0;
}

.nav-title {
    font-size: 16px;
    font-weight: 600;
    color: #1f2937;
    margin: 0 0 16px 0;
    line-height: 1.3;
}

.overall-progress .progress-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 8px;
    font-size: 13px;
    color: #6b7280;
}

.overall-progress .progress-percentage {
    font-weight: 600;
    color: #0066cc;
}

.overall-progress .progress-bar {
    height: 6px;
    background: #e5e7eb;
    border-radius: 3px;
    overflow: hidden;
}

.overall-progress .progress-fill {
    height: 100%;
    background: linear-gradient(90deg, #0066cc, #0052a3);
    border-radius: 3px;
    transition: width 0.3s ease;
}

.nav-content {
    flex: 1;
    overflow-y: auto;
    padding: 0;
}

/* Scrollbar styling */
.nav-content::-webkit-scrollbar {
    width: 6px;
}

.nav-content::-webkit-scrollbar-track {
    background: #f1f5f9;
}

.nav-content::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 3px;
}

.nav-content::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
}

.nav-chapter {
    border-bottom: 1px solid #f1f5f9;
}

.nav-chapter:last-child {
    border-bottom: none;
}

.nav-chapter.completed .chapter-header {
    background: #f0f9ff;
}

.nav-chapter.locked {
    opacity: 0.6;
}

.chapter-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px 20px;
    cursor: pointer;
    background: #fff;
    transition: all 0.2s ease;
    border: none;
}

.chapter-header:hover {
    background: #f8fafc;
}

.chapter-info {
    display: flex;
    align-items: center;
    gap: 12px;
    flex: 1;
    min-width: 0;
}

.chapter-icon {
    width: 28px;
    height: 28px;
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 13px;
    flex-shrink: 0;
}

.nav-chapter.completed .chapter-icon {
    background: #059669;
    color: white;
}

.nav-chapter.locked .chapter-icon {
    background: #f1f5f9;
    color: #9ca3af;
}

.nav-chapter:not(.completed):not(.locked) .chapter-icon {
    background: #0066cc;
    color: white;
}

.chapter-details {
    flex: 1;
    min-width: 0;
}

.chapter-name {
    font-size: 14px;
    font-weight: 600;
    color: #1f2937;
    margin: 0 0 4px 0;
    line-height: 1.2;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.chapter-progress {
    color: #6b7280;
    font-size: 12px;
}

.expand-icon {
    font-size: 12px;
    color: #9ca3af;
    transition: transform 0.2s ease;
    margin-left: 8px;
}

.chapter-lessons {
    background: #fafbfc;
    border-left: 3px solid #e5e7eb;
    margin: 0;
}

.nav-lesson {
    position: relative;
}

.nav-lesson.current {
    background: #eff6ff;
    border-left: 3px solid #0066cc;
}

.nav-lesson.current .lesson-content {
    background: #eff6ff;
}

.nav-lesson.completed .lesson-content {
    background: #f0fdf4;
}

.nav-lesson.locked {
    opacity: 0.6;
}

.lesson-link {
    display: block;
    text-decoration: none;
    color: inherit;
    transition: all 0.2s ease;
}

.lesson-link:hover {
    text-decoration: none;
    color: inherit;
}

.lesson-link:hover .lesson-content {
    background: #f1f5f9;
}

.lesson-content {
    display: flex;
    align-items: flex-start;
    padding: 12px 20px 12px 32px;
    gap: 12px;
    transition: background 0.2s ease;
    border-bottom: 1px solid #f1f5f9;
}

.lesson-icon {
    width: 20px;
    height: 20px;
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 11px;
    flex-shrink: 0;
    margin-top: 2px;
}

.nav-lesson.completed .lesson-icon {
    background: #059669;
    color: white;
}

.nav-lesson.current .lesson-icon {
    background: #0066cc;
    color: white;
}

.nav-lesson.locked .lesson-icon {
    background: #f1f5f9;
    color: #9ca3af;
}

.nav-lesson:not(.completed):not(.current):not(.locked) .lesson-icon {
    background: #e5e7eb;
    color: #6b7280;
}

.lesson-info {
    flex: 1;
    min-width: 0;
}

.lesson-name {
    font-size: 13px;
    font-weight: 500;
    color: #374151;
    margin: 0 0 4px 0;
    line-height: 1.3;
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.nav-lesson.current .lesson-name {
    color: #0066cc;
    font-weight: 600;
}

.lesson-meta {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 2px;
}

.lesson-type {
    color: #9ca3af;
    font-size: 11px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.quiz-indicator {
    color: #f59e0b;
    font-size: 11px;
}

/* Toggle function for chapters */
</style>

<script>
function toggleNavChapter(chapterId) {
    const chapterContent = document.getElementById('nav-chapter-' + chapterId);
    const expandIcon = chapterContent.previousElementSibling.querySelector('.expand-icon');
    
    if (chapterContent.style.display === 'block') {
        chapterContent.style.display = 'none';
        expandIcon.style.transform = 'rotate(0deg)';
    } else {
        chapterContent.style.display = 'block';
        expandIcon.style.transform = 'rotate(180deg)';
    }
}
</script> 