@model DataAccessLayer.Models.ViewModels.AdminUsersViewModel

<div class="d-flex justify-content-between align-items-center mb-3">
    <h5 class="mb-0">Users (@Model.TotalUsers)</h5>
    <div class="text-muted">
        Showing @(((Model.CurrentPage - 1) * Model.PageSize) + 1) - @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalUsers)) of @Model.TotalUsers
    </div>
</div>

@if (Model.Users.Any())
{
    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="table-light">
                <tr>
                    <th>Avatar</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Status</th>
                    <th>Joined</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    <tr>
                        <td>
                            @if (!string.IsNullOrEmpty(user.UserImage))
                            {
                                <img src="@user.UserImage" alt="@user.FullName" class="rounded-circle" width="40" height="40">
                            }
                            else
                            {
                                <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                    <i class="fas fa-user text-white"></i>
                                </div>
                            }
                        </td>
                        <td>
                            <div>
                                <strong>@user.FullName</strong>
                                @if (!string.IsNullOrEmpty(user.Username))
                                {
                                    <br><small class="text-muted">@@@user.Username</small>
                                }
                            </div>
                        </td>
                        <td>@user.UserEmail</td>
                        <td>
                            <span class="badge bg-@(user.UserRole.ToLower() == "admin" ? "danger" : user.UserRole.ToLower() == "instructor" ? "warning" : "primary")">
                                @user.UserRole.ToUpper()
                            </span>
                        </td>
                        <td>
                            @if (user.IsBanned)
                            {
                                <span class="status-badge status-banned">
                                    <i class="fas fa-ban me-1"></i>Banned
                                </span>
                            }
                            else
                            {
                                <span class="status-badge status-active">
                                    <i class="fas fa-check-circle me-1"></i>Active
                                </span>
                            }
                        </td>
                        <td>@user.AccountCreatedAt.ToString("MMM dd, yyyy")</td>
                        <td>
                            @if (user.UserRole.ToLower() != "admin")
                            {
                                <div class="btn-group" role="group">
                                    @if (user.IsBanned)
                                    {
                                        <button type="button" class="action-btn btn-unban" data-user-id="@user.UserId" title="Unban User">
                                            <i class="fas fa-user-check"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button" class="action-btn btn-ban" data-user-id="@user.UserId" title="Ban User">
                                            <i class="fas fa-user-slash"></i>
                                        </button>
                                    }
                                    <button type="button" class="action-btn btn-delete" data-user-id="@user.UserId" title="Delete User">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            }
                            else
                            {
                                <span class="text-muted">Protected</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav aria-label="User pagination" class="mt-4">
            <ul class="pagination justify-content-center">
                <!-- Previous Page -->
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("ManageUsers", new { 
                        search = Context.Request.Query["search"], 
                        roleFilter = Context.Request.Query["roleFilter"], 
                        page = Model.CurrentPage - 1 
                    })">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>

                <!-- Page Numbers -->
                @{
                    int startPage = Math.Max(1, Model.CurrentPage - 2);
                    int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                }

                @if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("ManageUsers", new { 
                            search = Context.Request.Query["search"], 
                            roleFilter = Context.Request.Query["roleFilter"], 
                            page = 1 
                        })">1</a>
                    </li>
                    @if (startPage > 2)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("ManageUsers", new { 
                            search = Context.Request.Query["search"], 
                            roleFilter = Context.Request.Query["roleFilter"], 
                            page = i 
                        })">@i</a>
                    </li>
                }

                @if (endPage < Model.TotalPages)
                {
                    @if (endPage < Model.TotalPages - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("ManageUsers", new { 
                            search = Context.Request.Query["search"], 
                            roleFilter = Context.Request.Query["roleFilter"], 
                            page = Model.TotalPages 
                        })">@Model.TotalPages</a>
                    </li>
                }

                <!-- Next Page -->
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("ManageUsers", new { 
                        search = Context.Request.Query["search"], 
                        roleFilter = Context.Request.Query["roleFilter"], 
                        page = Model.CurrentPage + 1 
                    })">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    }
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-users fa-3x text-muted mb-3"></i>
        <h5 class="text-muted">No Users Found</h5>
        <p class="text-muted">Try adjusting your search criteria or filters.</p>
    </div>
}

@Html.AntiForgeryToken()
