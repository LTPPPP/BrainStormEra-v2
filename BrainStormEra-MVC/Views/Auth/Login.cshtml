@model DataAccessLayer.Models.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login - BrainStormEra</title>
    <link rel="icon" type="image/x-icon" href="~/SharedMedia/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <!-- Load global CSS variables first -->
    <link rel="stylesheet" href="~/css/global.css">
    <!-- Preload key resources for better performance -->
    <link rel="preload" href="~/css/pages/Auth/login.css" as="style">
    <link rel="preload" href="~/js/pages/Auth/login.js" as="script">
    <link rel="preload" href="/SharedMedia/static/login-bg.jpg" as="image">
    <link rel="stylesheet" href="~/css/pages/Auth/login.css">
</head>

<body>
    <!-- Toast notification data containers -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Home button -->
    <a href="@Url.Action("Index", "Home")" class="home-button" title="Return to Home">
        <i class="fas fa-home"></i>
    </a>

    <div class="login-container">
        <div class="login-form-wrapper">
            <div class="login-header animated fadeInDown">
                <h1 class="text-center">Welcome to BrainStormEra</h1>
                <p class="text-center">Sign in to continue your learning journey</p>
            </div>

            <div class="login-form animated fadeIn">
                <form id="loginForm" asp-controller="Login" asp-action="Index" method="post"
                    asp-route-returnUrl="@ViewData["ReturnUrl"]">
                    <input asp-for="ReturnUrl" type="hidden" />
                    <div asp-validation-summary="ModelOnly" class="text-danger validation-summary"></div>

                    @if (TempData["RegistrationSuccess"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i> @TempData["RegistrationSuccess"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <div class="form-group">
                        <label asp-for="Username" class="control-label floating-label">Username</label>
                        <div class="input-group with-focus-effect">
                            <span class="input-group-text"><i class="fas fa-user"></i></span>
                            <input asp-for="Username" class="form-control" placeholder="Enter your username"
                                autocomplete="username" />
                        </div>
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Password" class="control-label floating-label">Password</label>
                        <div class="input-group with-focus-effect">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input asp-for="Password" class="form-control" placeholder="Enter your password"
                                autocomplete="current-password" />
                            <button type="button" class="btn btn-outline-secondary toggle-password" tabindex="-1"
                                aria-label="Toggle password visibility">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>

                    <div class="form-group form-check">
                        <input asp-for="RememberMe" class="form-check-input custom-checkbox" />
                        <label asp-for="RememberMe" class="form-check-label">Remember me</label>
                    </div>

                    <div class="form-group">
                        <button type="submit" class="btn btn-primary btn-block login-btn">
                            <span class="btn-text">Sign In</span>
                            <span class="spinner-border spinner-border-sm d-none" role="status"
                                aria-hidden="true"></span>
                        </button>
                    </div>

                    <div class="form-group text-center">
                        <a asp-action="ForgotPassword" class="forgot-password">Forgot your password?</a>
                    </div>
                </form>
            </div>

            <div class="login-footer animated fadeInUp">
                <p class="text-center">Don't have an account? <a href="@Url.Action("Index", "Register")"
                        class="register-link">Sign up</a></p>
            </div>
        </div>

        <div class="login-image parallax-bg">
            <div class="image-overlay"></div>
            <div class="login-quotes">
                <div class="quote-item active">
                    <p>"Education is the passport to the future, for tomorrow belongs to those who prepare for it
                        today."</p>
                    <cite>- Malcolm X</cite>
                </div>
                <div class="quote-item">
                    <p>"The beautiful thing about learning is that no one can take it away from you."</p>
                    <cite>- B.B. King</cite>
                </div>
                <div class="quote-item">
                    <p>"Education is not the filling of a pail, but the lighting of a fire."</p>
                    <cite>- W.B. Yeats</cite>
                </div>
                <div class="quote-item">
                    <p>"The function of education is to teach one to think intensively and to think critically.
                        Intelligence plus character - that is the goal of true education."</p>
                    <cite>- Martin Luther King, Jr.</cite>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/pages/Auth/login.js" defer></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>
        // Inline critical JS for faster loading
        document.addEventListener('DOMContentLoaded', function () {
            // Check if login was successful and handle redirect
            const successMessage = document.querySelector('[data-toast-success]');
            if (successMessage) {
                // Login successful, check if we need to redirect
                const currentUrl = window.location.href;
                const loginPath = '/Login/Index';

                // If we're still on login page after success, there might be a redirect issue
                if (currentUrl.includes(loginPath)) {
                    // Đã xoá console.log debug

                    // Wait a moment for any pending redirects, then force redirect
                    setTimeout(() => {
                        if (window.location.href.includes(loginPath)) {
                            // Đã xoá console.log debug
                            window.location.href = '/Home/Index';
                        }
                    }, 2000);
                }
            }

            // Show loading spinner on form submit
            const loginForm = document.getElementById('loginForm');
            const loginBtn = document.querySelector('.login-btn');

            if (loginForm) {
                loginForm.addEventListener('submit', function () {
                    const btnText = loginBtn.querySelector('.btn-text');
                    const spinner = loginBtn.querySelector('.spinner-border');

                    btnText.textContent = 'Signing in...';
                    spinner.classList.remove('d-none');
                    loginBtn.disabled = true;
                });
            }

            // Toggle password visibility
            const togglePasswordBtns = document.querySelectorAll('.toggle-password');
            togglePasswordBtns.forEach(btn => {
                btn.addEventListener('click', function () {
                    const passwordInput = this.closest('.input-group').querySelector('input');
                    const icon = this.querySelector('i');

                    if (passwordInput.type === 'password') {
                        passwordInput.type = 'text';
                        icon.classList.remove('fa-eye');
                        icon.classList.add('fa-eye-slash');
                    } else {
                        passwordInput.type = 'password';
                        icon.classList.remove('fa-eye-slash');
                        icon.classList.add('fa-eye');
                    }
                });
            });

            // Quote rotation
            const quotes = document.querySelectorAll('.quote-item');
            let currentQuote = 0;

            function rotateQuotes() {
                quotes.forEach(quote => quote.classList.remove('active'));
                quotes[currentQuote].classList.add('active');
                currentQuote = (currentQuote + 1) % quotes.length;
            }

            // Initial delay to allow page to load, then rotate quotes every 8 seconds
            setTimeout(() => {
                setInterval(rotateQuotes, 8000);
            }, 2000);
        });
    </script>

    <!-- Bootstrap and other required scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/shared/toast-notifications.js"></script>
    <script src="~/js/pages/Auth/login.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
</body>

</html>
