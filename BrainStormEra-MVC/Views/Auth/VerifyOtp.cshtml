@model DataAccessLayer.Models.ViewModels.OtpVerificationViewModel

@{
    ViewData["Title"] = "Verify OTP";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Verify OTP - BrainStormEra</title>
    <link rel="icon" type="image/x-icon" href="~/SharedMedia/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css">
    <link rel="stylesheet" href="~/css/pages/Auth/login.css">
    <link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css">
</head>

<body>
    <!-- Toast notification data containers -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Home button -->
    <a href="@Url.Action("Index", "Home")" class="home-button" title="Return to Home">
        <i class="fas fa-home"></i>
    </a>

<div class="login-container">
    <div class="login-form-wrapper">
        <div class="login-header">
            <h1 class="text-center">Verify OTP</h1>
            <p class="text-center">Enter the 6-digit code sent to your email</p>
        </div>

        <div class="login-form">
            <form id="otpForm" asp-controller="Login" asp-action="VerifyOtp" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger validation-summary"></div>

                <input type="hidden" asp-for="Email" />

                <div class="form-group">
                    <label asp-for="OtpCode" class="control-label">Verification Code</label>
                    <div class="otp-input-container">
                        <input type="text" id="otpInput" asp-for="OtpCode" class="form-control otp-input" maxlength="6"
                            placeholder="Enter 6-digit code" autocomplete="one-time-code" />
                    </div>
                    <span asp-validation-for="OtpCode" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-block login-btn">
                        <span class="btn-text">Verify Code</span>
                        <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                    </button>
                </div>

                <div class="form-group text-center">
                    <a asp-action="ForgotPassword" class="back-to-login">Back to Forgot Password</a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- jQuery and Validation Scripts -->
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script src="~/js/features/toast-notification.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Show loading spinner on form submit
        const form = document.getElementById('otpForm');
        const submitBtn = document.querySelector('.login-btn');

        if (form) {
            form.addEventListener('submit', function () {
                const btnText = submitBtn.querySelector('.btn-text');
                const spinner = submitBtn.querySelector('.spinner-border');

                btnText.textContent = 'Verifying...';
                spinner.classList.remove('d-none');
                submitBtn.disabled = true;
            });
        }

        // OTP input enhancement
        const otpInput = document.getElementById('otpInput');
        if (otpInput) {
            // Only allow numbers
            otpInput.addEventListener('input', function (e) {
                this.value = this.value.replace(/[^0-9]/g, '');
            });

            // Auto focus
            setTimeout(() => otpInput.focus(), 500);
        }

        // Quote rotation
        const quotes = document.querySelectorAll('.quote-item');
        let currentQuote = 0;

        function rotateQuotes() {
            quotes.forEach(quote => quote.classList.remove('active'));
            quotes[currentQuote].classList.add('active');
            currentQuote = (currentQuote + 1) % quotes.length;
        }

        setTimeout(() => {
            setInterval(rotateQuotes, 8000);
        }, 2000);
    });
</script>

</body>
</html>
