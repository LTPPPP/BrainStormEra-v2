@model CreateLessonViewModel
@{
    ViewData["Title"] = "Create Lesson";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - BrainStormEra</title>
    <meta name="description" content="Create a new lesson for your course on BrainStormEra">
    <link rel="icon" type="image/x-icon" href="~/img/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css">
    <link rel="stylesheet" href="~/css/layouts/base.css">
    <link rel="stylesheet" href="~/css/components/header.css">
    <link rel="stylesheet" href="~/css/components/loader.css">
    <link rel="stylesheet" href="~/css/pages/Course/create-course.css">
    <link rel="stylesheet" href="~/css/components/footer.css">
    <link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css">
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" as="style">
    <!-- Load page loader script -->
    <script src="~/js/components/loader.js"></script>
    <!-- Toast notifications CSS -->
    <link rel="stylesheet" href="~/css/components/toast-notifications.css">
</head>

<body>
    <!-- Display toast notifications from TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Page Loader -->
    <div class="page-loader">
        <div class="loader"></div>
    </div>

    <!-- Include Header partial view -->
    @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml")

    <!-- Page Header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-12 text-center">
                    <h1 class="mb-3">
                        <i class="fas fa-plus-circle me-3"></i>
                        Create New Lesson
                    </h1>
                    <p class="lead mb-0">Add engaging content to your course: <strong>@Model.CourseName</strong></p>
                    <div class="mt-4">
                        <span class="badge bg-light text-dark fs-6 me-3">
                            <i class="fas fa-clock me-1"></i> Takes 2-5 minutes
                        </span>
                        <span class="badge bg-light text-dark fs-6">
                            <i class="fas fa-book me-1"></i> Chapter: @Model.ChapterName
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="create-course-container">
        <form asp-action="CreateLesson" method="post" id="createLessonForm">
            @Html.AntiForgeryToken()
            <input asp-for="ChapterId" type="hidden" />
            <input asp-for="ChapterName" type="hidden" />
            <input asp-for="CourseName" type="hidden" />

            <!-- Lesson Information Section -->
            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-info-circle me-2"></i>
                    Lesson Information
                </h3>
                <p class="text-muted mb-4">Provide details about your new lesson and how it fits into your chapter</p>

                <div class="row">
                    <div class="col-lg-8">
                        <div class="mb-4">
                            <label asp-for="LessonName" class="form-label">
                                <i class="fas fa-book me-2"></i>Lesson Name *
                            </label>
                            <input asp-for="LessonName" class="form-control"
                                placeholder="e.g., Introduction to Variables and Data Types" maxlength="200" />
                            <span asp-validation-for="LessonName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label asp-for="Order" class="form-label">
                                <i class="fas fa-sort-numeric-up me-2"></i>Lesson Order *
                            </label>
                            <input asp-for="Order" class="form-control" type="number" min="1" placeholder="1" />
                            <span asp-validation-for="Order" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Order of this lesson within the chapter
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-4">
                            <label asp-for="LessonTypeId" class="form-label">
                                <i class="fas fa-tag me-2"></i>Lesson Type *
                            </label>
                            <select asp-for="LessonTypeId" class="form-control">
                                <option value="">Select lesson type</option>
                                @foreach (var lessonType in Model.LessonTypes)
                                {
                                    <option value="@lessonType.LessonTypeId">@lessonType.LessonTypeName</option>
                                }
                            </select>
                            <span asp-validation-for="LessonTypeId" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-lightbulb me-1"></i>
                                Choose the type that best describes your lesson content
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <label asp-for="Description" class="form-label">
                        <i class="fas fa-align-left me-2"></i>Lesson Description
                    </label>
                    <textarea asp-for="Description" class="form-control" rows="4"
                        placeholder="Provide a brief description of what students will learn in this lesson (optional)"
                        maxlength="1000"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                    <div class="form-text">
                        <i class="fas fa-info-circle me-1"></i>
                        Help students understand what they'll learn (optional but recommended)
                    </div>
                </div>

                <div class="mb-4">
                    <label asp-for="Content" class="form-label">
                        <i class="fas fa-file-alt me-2"></i>Lesson Content
                    </label>
                    <textarea asp-for="Content" class="form-control" rows="8"
                        placeholder="Enter the main content for this lesson (optional)" maxlength="5000"></textarea>
                    <span asp-validation-for="Content" class="text-danger"></span>
                    <div class="form-text">
                        <i class="fas fa-edit me-1"></i>
                        Add the main teaching content for this lesson (optional)
                    </div>
                </div>

                <!-- Action Buttons -->
                <div class="d-flex justify-content-between align-items-center mt-5">
                    <a href="javascript:history.back()" class="btn btn-outline-secondary btn-lg">
                        <i class="fas fa-arrow-left me-2"></i>Back to Course
                    </a>
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-save me-2"></i>Create Lesson
                    </button>
                </div>
            </div>
        </form>
    </div>

    <!-- Include Footer partial view -->
    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Include toast notifications script -->
    <script src="~/js/shared/toast-notifications.js"></script>

    <script>
        // Hide preloader when page is loaded
        window.addEventListener('load', function () {
            document.querySelector('.page-loader').classList.add('loaded');
            setTimeout(() => {
                document.querySelector('.page-loader').style.display = 'none';
            }, 500);
        });

        // Change header style on scroll
        window.addEventListener('scroll', function () {
            if (window.scrollY > 50) {
                document.querySelector('.sticky-header').classList.add('scrolled');
            } else {
                document.querySelector('.sticky-header').classList.remove('scrolled');
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
            // Auto-resize textarea
            const textareas = document.querySelectorAll('textarea');
            textareas.forEach(textarea => {
                textarea.addEventListener('input', function () {
                    this.style.height = 'auto';
                    this.style.height = this.scrollHeight + 'px';
                });
            });

            // Character count for description and content
            const descInput = document.querySelector('#Description');
            const contentInput = document.querySelector('#Content');

            if (descInput) {
                const maxLength = 1000;
                const charCounter = document.createElement('div');
                charCounter.className = 'form-text text-end mt-1';
                charCounter.innerHTML = `<small class="text-muted"><span id="descCharCount">0</span>/${maxLength} characters</small>`;
                descInput.parentNode.insertBefore(charCounter, descInput.nextSibling.nextSibling);

                const charCountSpan = document.getElementById('descCharCount');
                descInput.addEventListener('input', function () {
                    const length = this.value.length;
                    charCountSpan.textContent = length;
                    if (length > maxLength * 0.9) {
                        charCountSpan.className = 'text-warning';
                    } else if (length >= maxLength) {
                        charCountSpan.className = 'text-danger';
                    } else {
                        charCountSpan.className = 'text-muted';
                    }
                });
            }

            if (contentInput) {
                const maxLength = 5000;
                const charCounter = document.createElement('div');
                charCounter.className = 'form-text text-end mt-1';
                charCounter.innerHTML = `<small class="text-muted"><span id="contentCharCount">0</span>/${maxLength} characters</small>`;
                contentInput.parentNode.insertBefore(charCounter, contentInput.nextSibling.nextSibling);

                const charCountSpan = document.getElementById('contentCharCount');
                contentInput.addEventListener('input', function () {
                    const length = this.value.length;
                    charCountSpan.textContent = length;
                    if (length > maxLength * 0.9) {
                        charCountSpan.className = 'text-warning';
                    } else if (length >= maxLength) {
                        charCountSpan.className = 'text-danger';
                    } else {
                        charCountSpan.className = 'text-muted';
                    }
                });
            }

            // Form validation enhancement
            const form = document.getElementById('createLessonForm');
            const inputs = form.querySelectorAll('input[required], select[required]');

            inputs.forEach(input => {
                input.addEventListener('blur', function () {
                    if (!this.value.trim() && this.hasAttribute('required')) {
                        this.classList.add('is-invalid');
                    } else {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    }
                });

                input.addEventListener('input', function () {
                    if (this.classList.contains('is-invalid') && this.value.trim()) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    }
                });
            });

            // Smooth scrolling for form sections
            const formSections = document.querySelectorAll('.form-section');
            formSections.forEach((section, index) => {
                section.style.opacity = '0';
                section.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    section.style.transition = 'all 0.6s ease';
                    section.style.opacity = '1';
                    section.style.transform = 'translateY(0)';
                }, index * 200);
            });
        });
    </script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</body>

</html>
      