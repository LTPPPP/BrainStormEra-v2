@model CreateLessonViewModel
@{
    ViewData["Title"] = "Create Lesson";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - BrainStormEra</title>
    <meta name="description" content="Create a new lesson for your course on BrainStormEra">
    <link rel="icon" type="image/x-icon" href="~/SharedMedia/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css">
    <link rel="stylesheet" href="~/css/layouts/base.css">
    <link rel="stylesheet" href="~/css/components/header.css">
    <link rel="stylesheet" href="~/css/components/loader.css">
    <link rel="stylesheet" href="~/css/pages/Course/create-course.css">
    <link rel="stylesheet" href="~/css/pages/Lesson/lesson-types.css">
    <link rel="stylesheet" href="~/css/components/footer.css">
    <link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css">
    <link rel="stylesheet" href="~/css/components/chatbot.css">
    <link rel="stylesheet" href="~/css/components/page-header-themes.css">
    <!-- User meta tags for chatbot -->
    @if (Context.Session.GetString("UserId") != null)
    {
        <meta name="user-id" content="@Context.Session.GetString("UserId")">
        <meta name="user-role" content="@Context.Session.GetString("UserRole")">
        <meta name="user-name" content="@Context.Session.GetString("UserName")">
    }
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" as="style">
    <!-- Load page loader script -->
    <script src="~/js/components/loader.js"></script>
    <!-- Toast notifications CSS -->
    <link rel="stylesheet" href="~/css/components/toast-notifications.css">
</head>

<body>
    <!-- Display toast notifications from TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Page Loader -->
    <div class="page-loader">
        <div class="loader"></div>
    </div>

    <!-- Include Header partial view -->
    @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml")

    <!-- Page Header -->
    <div class="page-header create-page">
        <div class="container">
            <div class="row">
                <div class="col-12 text-center">
                    <h1 class="mb-3">
                        <i class="fas fa-plus-circle me-3"></i>
                        Create New Lesson
                    </h1>
                    <p class="lead mb-0">Add engaging content to your course: <strong>@Model.CourseName</strong></p>
                    <div class="mt-4">
                        <span class="badge bg-light text-dark fs-6 me-3">
                            <i class="fas fa-clock me-1"></i> Takes 2-5 minutes
                        </span>
                        <span class="badge bg-light text-dark fs-6">
                            <i class="fas fa-book me-1"></i> Chapter: @Model.ChapterName
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="create-course-container">
        <form asp-action="CreateLesson" method="post" enctype="multipart/form-data" id="createLessonForm">
            @Html.AntiForgeryToken()
            <input asp-for="ChapterId" type="hidden" />
            <input asp-for="CourseId" type="hidden" />
            <input asp-for="ChapterName" type="hidden" />
            <input asp-for="CourseName" type="hidden" />

            <!-- Lesson Information Section -->
            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-info-circle me-2"></i>
                    Lesson Information
                </h3>
                <p class="text-muted mb-4">Provide details about your new lesson and how it fits into your chapter</p>

                <div class="row">
                    <div class="col-lg-8">
                        <div class="mb-4">
                            <label asp-for="LessonName" class="form-label">
                                <i class="fas fa-book me-2"></i>Lesson Name *
                            </label>
                            <input asp-for="LessonName" class="form-control"
                                placeholder="e.g., Introduction to Variables and Data Types" maxlength="200" />
                            <span asp-validation-for="LessonName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label asp-for="Order" class="form-label">
                                <i class="fas fa-sort-numeric-up me-2"></i>Lesson Order *
                            </label>
                            <input asp-for="Order" class="form-control" type="number" min="1" placeholder="1" />
                            <span asp-validation-for="Order" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Order of this lesson within the chapter
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-4"> <label asp-for="LessonTypeId" class="form-label">
                                <i class="fas fa-tag me-2"></i>Lesson Type *
                            </label>
                            <select asp-for="LessonTypeId" class="form-control" id="lessonTypeSelect">
                                <option value="">Select lesson type</option>
                                @foreach (var lessonType in Model.LessonTypes)
                                {
                                    <option value="@lessonType.LessonTypeId" data-type-name="@lessonType.LessonTypeName">
                                        @lessonType.LessonTypeName
                                    </option>
                                }
                            </select>
                            <span asp-validation-for="LessonTypeId" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-lightbulb me-1"></i>
                                Choose the type that best describes your lesson content
                            </div>
                        </div>
                    </div>
                </div>
                <div class="mb-4">
                    <label asp-for="Description" class="form-label">
                        <i class="fas fa-align-left me-2"></i>Lesson Description
                    </label>
                    <textarea asp-for="Description" class="form-control" rows="4"
                        placeholder="Provide a brief description of what students will learn in this lesson (optional)"
                        maxlength="1000"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                    <div class="form-text">
                        <i class="fas fa-info-circle me-1"></i>
                        Help students understand what they'll learn (optional but recommended)
                    </div>
                </div> <!-- Dynamic Content Sections Based on Lesson Type -->

                <!-- Option 1: Video Content Section -->
                <div id="videoContentSection" class="lesson-type-section" style="display: none;">
                    <h4 class="mb-3">
                        <i class="fas fa-video me-2 text-primary"></i>Video Content
                    </h4>

                    <div class="row">
                        <div class="col-lg-6">
                            <div class="mb-4">
                                <label asp-for="VideoUrl" class="form-label">
                                    <i class="fas fa-link me-2"></i>Video URL (YouTube or other)
                                </label>
                                <input asp-for="VideoUrl" class="form-control"
                                    placeholder="https://www.youtube.com/watch?v=..." />
                                <span asp-validation-for="VideoUrl" class="text-danger"></span>
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Paste a YouTube link or other video URL
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="mb-4">
                                <label asp-for="VideoFile" class="form-label">
                                    <i class="fas fa-upload me-2"></i>Or Upload Video File
                                </label>
                                <input asp-for="VideoFile" type="file" class="form-control" accept="video/*" />
                                <div class="form-text">
                                    <i class="fas fa-file-video me-1"></i>
                                    Accepted formats: MP4, AVI, MOV, WMV (Max 100MB)
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Content" class="form-label">
                            <i class="fas fa-file-alt me-2"></i>Video Description *
                        </label>
                        <textarea asp-for="Content" class="form-control" rows="6"
                            placeholder="Describe what students will learn from this video" maxlength="5000"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>
                </div>

                <!-- Option 2: Text Content Section -->
                <div id="textContentSection" class="lesson-type-section" style="display: none;">
                    <h4 class="mb-3">
                        <i class="fas fa-edit me-2 text-success"></i>Text Content
                    </h4>

                    <div class="mb-4">
                        <label asp-for="TextContent" class="form-label">
                            <i class="fas fa-paragraph me-2"></i>Rich Text Content *
                        </label>
                        <textarea asp-for="TextContent" class="form-control" rows="12"
                            placeholder="Enter your lesson content here. You can use formatting, lists, and detailed explanations..."
                            maxlength="10000"></textarea>
                        <span asp-validation-for="TextContent" class="text-danger"></span>
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>
                            Write detailed explanations, examples, and exercises for students
                        </div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Content" class="form-label">
                            <i class="fas fa-file-alt me-2"></i>Lesson Summary *
                        </label>
                        <textarea asp-for="Content" class="form-control" rows="4"
                            placeholder="Provide a brief summary of this text lesson" maxlength="1000"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>
                </div>

                <!-- Option 3: Document/File Content Section -->
                <div id="documentContentSection" class="lesson-type-section" style="display: none;">
                    <h4 class="mb-3">
                        <i class="fas fa-file-pdf me-2 text-danger"></i>Document Content
                    </h4>

                    <div class="mb-4">
                        <label asp-for="DocumentFiles" class="form-label">
                            <i class="fas fa-upload me-2"></i>Upload Documents *
                        </label>
                        <input asp-for="DocumentFiles" type="file" class="form-control" multiple
                            accept=".pdf,.doc,.docx,.ppt,.pptx,.txt,.xls,.xlsx" />
                        <div class="form-text">
                            <i class="fas fa-file me-1"></i>
                            Accepted formats: PDF, DOC, DOCX, PPT, PPTX, TXT, XLS, XLSX (Max 10MB each)
                        </div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="DocumentDescription" class="form-label">
                            <i class="fas fa-info me-2"></i>Document Description
                        </label>
                        <textarea asp-for="DocumentDescription" class="form-control" rows="4"
                            placeholder="Explain what students will find in these documents and how to use them"
                            maxlength="1000"></textarea>
                        <div class="form-text">
                            <i class="fas fa-lightbulb me-1"></i>
                            Help students understand how to use the uploaded materials
                        </div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Content" class="form-label">
                            <i class="fas fa-file-alt me-2"></i>Lesson Instructions *
                        </label>
                        <textarea asp-for="Content" class="form-control" rows="6"
                            placeholder="Provide instructions on how students should work with the documents"
                            maxlength="5000"></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                    </div>
                </div>

                <!-- Default Content Section (when no lesson type is selected) -->
                <div id="defaultContentSection" class="lesson-type-section">
                    <div class="mb-4">
                        <label asp-for="Content" class="form-label">
                            <i class="fas fa-file-alt me-2"></i>Lesson Content *
                        </label>
                        <textarea asp-for="Content" class="form-control" rows="8"
                            placeholder="Select a lesson type above to see specific content options" maxlength="5000"
                            readonly></textarea>
                        <span asp-validation-for="Content" class="text-danger"></span>
                        <div class="form-text">
                            <i class="fas fa-arrow-up me-1"></i>
                            Please select a lesson type first to enable content input
                        </div>
                    </div>
                </div>
            </div>

            <!-- Advanced Settings Section -->
            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-cog me-2"></i>
                    Advanced Settings
                </h3>
                <p class="text-muted mb-4">Configure lesson access, requirements, and completion criteria</p>

                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-check form-switch custom-cursor-default-hover mb-4"
                            style="padding-left: 2rem;">
                            <input asp-for="IsLocked" class="form-check-input" type="checkbox" />
                            <label asp-for="IsLocked" class="form-check-label">
                                <i class="fas fa-lock me-2 text-warning"></i>
                                <strong>Lock Lesson</strong>
                                <div class="small text-muted mt-1">Students must unlock this lesson through
                                    prerequisites</div>
                            </label>
                        </div>

                        @if (Model.HasExistingLessons)
                        {
                            <div class="mb-4" id="unlockAfterSection" style="display: none;">
                                <label asp-for="UnlockAfterLessonId" class="form-label">
                                    <i class="fas fa-unlock me-2"></i>Unlock After Lesson
                                </label>
                                <select asp-for="UnlockAfterLessonId" class="form-select">
                                    <option value="">No prerequisite - Available immediately</option>
                                    @foreach (var lesson in Model.ExistingLessons.OrderBy(l => l.LessonOrder))
                                    {
                                        <option value="@lesson.LessonId">Lesson @lesson.LessonOrder: @lesson.LessonName</option>
                                    }
                                </select>
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Choose which lesson must be completed first (only applies if locked)
                                </div>
                            </div>
                        }

                        <div class="form-check form-switch custom-cursor-default-hover mb-4"
                            style="padding-left: 2rem;">
                            <input asp-for="IsMandatory" class="form-check-input" type="checkbox" checked />
                            <label asp-for="IsMandatory" class="form-check-label">
                                <i class="fas fa-exclamation-circle me-2 text-info"></i>
                                <strong>Mandatory Lesson</strong>
                                <div class="small text-muted mt-1">Students must complete this lesson to progress</div>
                            </label>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-check form-switch custom-cursor-default-hover mb-4"
                            style="padding-left: 2rem;">
                            <input asp-for="RequiresQuizPass" class="form-check-input" type="checkbox" />
                            <label asp-for="RequiresQuizPass" class="form-check-label">
                                <i class="fas fa-question-circle me-2 text-success"></i>
                                <strong>Requires Quiz Pass</strong>
                                <div class="small text-muted mt-1">Students must pass a quiz to complete this lesson
                                </div>
                            </label>
                        </div>

                        <div class="mb-4" id="quizScoreSection" style="display: none;">
                            <label asp-for="MinQuizScore" class="form-label">
                                <i class="fas fa-percentage me-2"></i>Minimum Quiz Score (%)
                            </label>
                            <input asp-for="MinQuizScore" type="number" class="form-control" min="0" max="100"
                                placeholder="70" />
                            <span asp-validation-for="MinQuizScore" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Students must achieve this score to pass the lesson quiz
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-4">
                            <label asp-for="MinCompletionPercentage" class="form-label">
                                <i class="fas fa-chart-line me-2"></i>Minimum Completion Percentage (%)
                            </label>
                            <input asp-for="MinCompletionPercentage" type="number" class="form-control" min="0"
                                max="100" placeholder="100" />
                            <span asp-validation-for="MinCompletionPercentage" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Percentage of lesson content that must be viewed/completed
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="mb-4">
                            <label asp-for="MinTimeSpent" class="form-label">
                                <i class="fas fa-clock me-2"></i>Minimum Time Spent (minutes)
                            </label>
                            <input asp-for="MinTimeSpent" type="number" class="form-control" min="0" max="9999"
                                placeholder="0" />
                            <span asp-validation-for="MinTimeSpent" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Minimum time students must spend on this lesson
                            </div>
                        </div>
                    </div>
                </div>

                @if (Model.HasExistingLessons)
                {
                    <div class="mt-4 p-3 bg-light rounded">
                        <h6 class="fw-bold text-primary">
                            <i class="fas fa-list me-2"></i>Existing Lessons in This Chapter
                        </h6>
                        <div class="row">
                            @foreach (var lesson in Model.ExistingLessons.OrderBy(l => l.LessonOrder))
                            {
                                <div class="col-md-6 mb-2">
                                    <div class="d-flex align-items-center"> <span
                                            class="badge bg-secondary me-2">@lesson.LessonOrder</span>
                                        <span class="small">@lesson.LessonName</span>
                                        @if (lesson.IsLocked == true)
                                        {
                                            <i class="fas fa-lock text-warning ms-2" title="Locked lesson"></i>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>

            <!-- Action Buttons -->
            <div class="form-section">
                <div class="d-flex justify-content-between align-items-center">
                    <a href="javascript:history.back()" class="btn btn-outline-secondary"
                        style="font-size: 0.8rem; padding: 0.5rem 1rem;">
                        <i class="fas fa-arrow-left me-2"></i>Back to Course
                    </a>
                    <button type="submit" class="btn btn-primary" style="font-size: 0.8rem; padding: 0.5rem 1rem;">
                        <i class="fas fa-save me-2"></i>Create Lesson
                    </button>
                </div>
            </div>
        </form>
    </div>

    <!-- Include Footer partial view -->
    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Include toast notifications script -->
    <script src="~/js/shared/toast-notifications.js"></script>

    <script>
        // Hide preloader when page is loaded
        window.addEventListener('load', function () {
            document.querySelector('.page-loader').classList.add('loaded');
            setTimeout(() => {
                document.querySelector('.page-loader').style.display = 'none';
            }, 500);
        });        // Change header style on scroll
        window.addEventListener('scroll', function () {
            if (window.scrollY > 50) {
                document.querySelector('.bse-sticky-header').classList.add('bse-scrolled');
            } else {
                document.querySelector('.bse-sticky-header').classList.remove('bse-scrolled');
            }
        }); document.addEventListener('DOMContentLoaded', function () {
            // Lesson type dynamic content handling
            const lessonTypeSelect = document.querySelector('#LessonTypeId');
            const videoContentSection = document.querySelector('#videoContentSection');
            const textContentSection = document.querySelector('#textContentSection');
            const documentContentSection = document.querySelector('#documentContentSection');
            const defaultContentSection = document.querySelector('#defaultContentSection');

            // Function to hide all content sections
            function hideAllContentSections() {
                const sections = [videoContentSection, textContentSection, documentContentSection, defaultContentSection];
                sections.forEach(section => {
                    if (section) {
                        section.style.display = 'none';
                        section.style.opacity = '0';
                    }
                });
            }

            // Function to show a specific section with animation
            function showContentSection(section) {
                if (section) {
                    section.style.display = 'block';
                    setTimeout(() => {
                        section.style.transition = 'opacity 0.3s ease';
                        section.style.opacity = '1';
                    }, 10);
                }
            }

            // Function to clear form fields in hidden sections
            function clearSectionFields(section) {
                if (section) {
                    const inputs = section.querySelectorAll('input, textarea');
                    inputs.forEach(input => {
                        if (input.type !== 'file') {
                            input.value = '';
                        } else {
                            input.value = null;
                        }
                    });
                }
            }            // Handle lesson type change
            if (lessonTypeSelect) {
                lessonTypeSelect.addEventListener('change', function () {
                    const selectedValue = this.value;
                    const selectedOption = this.options[this.selectedIndex];
                    const typeName = selectedOption.getAttribute('data-type-name');

                    hideAllContentSections();

                    // Clear all section fields first
                    clearSectionFields(videoContentSection);
                    clearSectionFields(textContentSection);
                    clearSectionFields(documentContentSection);

                    // Show appropriate section based on lesson type name
                    if (typeName) {
                        const lowerTypeName = typeName.toLowerCase();
                        if (lowerTypeName.includes('video') || lowerTypeName.includes('multimedia')) {
                            showContentSection(videoContentSection);
                            // Make video URL or file required
                            const videoUrl = document.querySelector('#VideoUrl');
                            const videoFile = document.querySelector('#VideoFile');
                            if (videoUrl) videoUrl.removeAttribute('readonly');
                            if (videoFile) videoFile.removeAttribute('disabled');
                        } else if (lowerTypeName.includes('text') || lowerTypeName.includes('reading') || lowerTypeName.includes('article')) {
                            showContentSection(textContentSection);
                            // Make text content required
                            const textContent = document.querySelector('#TextContent');
                            if (textContent) textContent.removeAttribute('readonly');
                        } else if (lowerTypeName.includes('document') || lowerTypeName.includes('file') || lowerTypeName.includes('pdf')) {
                            showContentSection(documentContentSection);
                            // Make document files required
                            const documentFiles = document.querySelector('#DocumentFiles');
                            if (documentFiles) documentFiles.removeAttribute('disabled');
                        } else {
                            // For any other type or if we can't determine, show default
                            showContentSection(defaultContentSection);
                            const defaultContent = document.querySelector('#defaultContentSection #Content');
                            if (defaultContent) defaultContent.removeAttribute('readonly');
                        }
                    } else {
                        showContentSection(defaultContentSection);
                        // Keep default content readonly until type is selected
                        const defaultContent = document.querySelector('#defaultContentSection #Content');
                        if (defaultContent) defaultContent.setAttribute('readonly', 'readonly');
                    }
                });

                // Initialize on page load
                lessonTypeSelect.dispatchEvent(new Event('change'));
            }

            // Video URL validation for YouTube and other video platforms
            const videoUrlInput = document.querySelector('#VideoUrl');
            if (videoUrlInput) {
                videoUrlInput.addEventListener('blur', function () {
                    const url = this.value.trim();
                    if (url) {
                        const videoUrlPattern = /^(https?:\/\/)?(www\.)?(youtube\.com|youtu\.be|vimeo\.com|dailymotion\.com)/i;
                        if (!videoUrlPattern.test(url)) {
                            this.classList.add('is-invalid');
                            // You can add custom validation message here
                        } else {
                            this.classList.remove('is-invalid');
                            this.classList.add('is-valid');
                        }
                    }
                });
            }

            // File size validation
            const fileInputs = document.querySelectorAll('input[type="file"]');
            fileInputs.forEach(input => {
                input.addEventListener('change', function () {
                    const files = this.files;
                    let maxSize = 100 * 1024 * 1024; // 100MB for video
                    if (this.accept && this.accept.includes('.pdf')) {
                        maxSize = 10 * 1024 * 1024; // 10MB for documents
                    }

                    for (let file of files) {
                        if (file.size > maxSize) {
                            alert(`File "${file.name}" is too large. Maximum size is ${maxSize / (1024 * 1024)}MB.`);
                            this.value = '';
                            break;
                        }
                    }
                });
            });

            // Advanced settings toggles
            // Handle conditional visibility for advanced settings
            const isLockedCheckbox = document.querySelector('#IsLocked');
            const unlockAfterSection = document.querySelector('#unlockAfterSection');
            const requiresQuizCheckbox = document.querySelector('#RequiresQuizPass');
            const quizScoreSection = document.querySelector('#quizScoreSection');

            // Toggle unlock after lesson section
            if (isLockedCheckbox && unlockAfterSection) {
                isLockedCheckbox.addEventListener('change', function () {
                    if (this.checked) {
                        unlockAfterSection.style.display = 'block';
                        unlockAfterSection.style.animation = 'fadeIn 0.3s ease';
                    } else {
                        unlockAfterSection.style.display = 'none';
                        document.querySelector('#UnlockAfterLessonId').value = '';
                    }
                });
            }

            // Toggle quiz score section
            if (requiresQuizCheckbox && quizScoreSection) {
                requiresQuizCheckbox.addEventListener('change', function () {
                    if (this.checked) {
                        quizScoreSection.style.display = 'block';
                        quizScoreSection.style.animation = 'fadeIn 0.3s ease';
                        document.querySelector('#MinQuizScore').value = '70';
                    } else {
                        quizScoreSection.style.display = 'none';
                        document.querySelector('#MinQuizScore').value = '';
                    }
                });
            }

            // Lesson order validation
            const orderInput = document.querySelector('#Order');
            const existingOrders = [@string.Join(",", Model.ExistingLessons.Select(l => l.LessonOrder))];

            if (orderInput) {
                orderInput.addEventListener('blur', function () {
                    const value = parseInt(this.value);
                    const existingError = this.parentNode.querySelector('.order-validation-error');

                    if (existingError) {
                        existingError.remove();
                    }

                    if (value && existingOrders.includes(value)) {
                        const errorDiv = document.createElement('div');
                        errorDiv.className = 'order-validation-error text-danger small mt-1';
                        errorDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-1"></i>This lesson order is already taken';
                        this.parentNode.appendChild(errorDiv);
                        this.classList.add('is-invalid');
                    } else if (value && value > 0) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    }
                });
            }

            // Auto-resize textarea
            const textareas = document.querySelectorAll('textarea');
            textareas.forEach(textarea => {
                textarea.addEventListener('input', function () {
                    this.style.height = 'auto';
                    this.style.height = this.scrollHeight + 'px';
                });
            });

            // Character count for description and content
            const descInput = document.querySelector('#Description');
            const contentInput = document.querySelector('#Content');

            if (descInput) {
                const maxLength = 1000;
                const charCounter = document.createElement('div');
                charCounter.className = 'form-text text-end mt-1';
                charCounter.innerHTML = `<small class="text-muted"><span id="descCharCount">0</span>/${maxLength} characters</small>`;
                descInput.parentNode.insertBefore(charCounter, descInput.nextSibling.nextSibling);

                const charCountSpan = document.getElementById('descCharCount');
                descInput.addEventListener('input', function () {
                    const length = this.value.length;
                    charCountSpan.textContent = length;
                    if (length > maxLength * 0.9) {
                        charCountSpan.className = 'text-warning';
                    } else if (length >= maxLength) {
                        charCountSpan.className = 'text-danger';
                    } else {
                        charCountSpan.className = 'text-muted';
                    }
                });
            }

            if (contentInput) {
                const maxLength = 5000;
                const charCounter = document.createElement('div');
                charCounter.className = 'form-text text-end mt-1';
                charCounter.innerHTML = `<small class="text-muted"><span id="contentCharCount">0</span>/${maxLength} characters</small>`;
                contentInput.parentNode.insertBefore(charCounter, contentInput.nextSibling.nextSibling);

                const charCountSpan = document.getElementById('contentCharCount');
                contentInput.addEventListener('input', function () {
                    const length = this.value.length;
                    charCountSpan.textContent = length;
                    if (length > maxLength * 0.9) {
                        charCountSpan.className = 'text-warning';
                    } else if (length >= maxLength) {
                        charCountSpan.className = 'text-danger';
                    } else {
                        charCountSpan.className = 'text-muted';
                    }
                });
            }

            // Form validation enhancement
            const form = document.getElementById('createLessonForm');
            const inputs = form.querySelectorAll('input[required], select[required]');

            inputs.forEach(input => {
                input.addEventListener('blur', function () {
                    if (!this.value.trim() && this.hasAttribute('required')) {
                        this.classList.add('is-invalid');
                    } else {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    }
                });

                input.addEventListener('input', function () {
                    if (this.classList.contains('is-invalid') && this.value.trim()) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    }
                });
            });

            // Smooth scrolling for form sections
            const formSections = document.querySelectorAll('.form-section');
            formSections.forEach((section, index) => {
                section.style.opacity = '0';
                section.style.transform = 'translateY(20px)';

                setTimeout(() => {
                    section.style.transition = 'all 0.6s ease';
                    section.style.opacity = '1';
                    section.style.transform = 'translateY(0)';
                }, index * 200);
            });
        });
    </script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }

    <!-- Chatbot for authenticated users -->
    @if (Context.Session.GetString("UserId") != null)
    {
        @await Html.PartialAsync("~/Views/Shared/_Chatbot.cshtml")
        @Html.AntiForgeryToken()
        <script src="~/js/components/chatbot.js"></script>
    }
</body>

</html>
