@model CreateLessonViewModel
@{
    ViewData["Title"] = "Create Interactive Lesson";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - BrainStormEra</title>
    <meta name="description" content="Create a new interactive lesson for your course">
    <link rel="icon" type="image/x-icon" href="~/img/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css">
    <link rel="stylesheet" href="~/css/layouts/base.css">
    <link rel="stylesheet" href="~/css/components/header.css">
    <link rel="stylesheet" href="~/css/components/loader.css">
    <link rel="stylesheet" href="~/css/pages/Course/create-course.css">
    <link rel="stylesheet" href="~/css/components/footer.css">
    <!-- Toast notifications CSS -->
    <link rel="stylesheet" href="~/css/components/toast-notifications.css">
    
    <style>
        .file-upload-area {
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            padding: 2rem;
            text-align: center;
            transition: all 0.3s ease;
            background: #f8f9fa;
        }
        
        .file-upload-area:hover {
            border-color: #007bff;
            background: #f0f8ff;
        }
        
        .file-upload-area.dragover {
            border-color: #007bff;
            background: #e3f2fd;
        }
        
        .uploaded-files {
            margin-top: 1rem;
        }
        
        .file-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0.75rem;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            margin-bottom: 0.5rem;
            background: white;
        }
        
        .file-info {
            display: flex;
            align-items: center;
        }
        
        .file-icon {
            font-size: 1.5rem;
            margin-right: 0.75rem;
            width: 2rem;
            text-align: center;
        }
        
        .file-details {
            flex: 1;
        }
        
        .file-name {
            font-weight: 500;
            margin-bottom: 0.25rem;
        }
        
        .file-size {
            font-size: 0.875rem;
            color: #6c757d;
        }
        
        .remove-file {
            background: none;
            border: none;
            color: #dc3545;
            cursor: pointer;
            padding: 0.25rem;
        }
        
        .remove-file:hover {
            color: #a71e2a;
        }
    </style>
</head>

<body>
    <!-- Display toast notifications from TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Page Loader -->
    <div class="page-loader">
        <div class="loader"></div>
    </div>

    <!-- Include Header partial view -->
    @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml")

    <!-- Page Header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-12 text-center">
                    <h1 class="mb-3">
                        <i class="fas fa-file-pdf me-3 text-danger"></i>
                        Create Interactive Lesson
                    </h1>
                    <p class="lead mb-0">Upload documents and materials for: <strong>@Model.CourseName</strong></p>
                    <div class="mt-4">
                        <span class="badge bg-light text-dark fs-6 me-3">
                            <i class="fas fa-clock me-1"></i> Takes 3-7 minutes
                        </span>
                        <span class="badge bg-light text-dark fs-6">
                            <i class="fas fa-book me-1"></i> Chapter: @Model.ChapterName
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="create-course-container">
        <form asp-action="CreateInteractiveLesson" method="post" enctype="multipart/form-data" id="createInteractiveLessonForm">
            @Html.AntiForgeryToken()
            <input asp-for="ChapterId" type="hidden" />
            <input asp-for="CourseId" type="hidden" />
            <input asp-for="ChapterName" type="hidden" />
            <input asp-for="CourseName" type="hidden" />
            <input asp-for="LessonTypeId" type="hidden" value="3" />

            <!-- Lesson Basic Information -->
            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-info-circle me-2"></i>
                    Basic Information
                </h3>
                <p class="text-muted mb-4">Provide basic details about your interactive lesson</p>

                <div class="row">
                    <div class="col-lg-8">
                        <div class="mb-4">
                            <label asp-for="LessonName" class="form-label">
                                <i class="fas fa-book me-2"></i>Lesson Name *
                            </label>
                            <input asp-for="LessonName" class="form-control"
                                placeholder="e.g., Programming Exercises and Practice Files" maxlength="200" />
                            <span asp-validation-for="LessonName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label asp-for="Order" class="form-label">
                                <i class="fas fa-sort-numeric-up me-2"></i>Lesson Order *
                            </label>
                            <input asp-for="Order" class="form-control" type="number" min="1" />
                            <span asp-validation-for="Order" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <label asp-for="Description" class="form-label">
                        <i class="fas fa-align-left me-2"></i>Lesson Description
                    </label>
                    <textarea asp-for="Description" class="form-control" rows="3"
                        placeholder="Brief description of what students will learn (optional)" maxlength="1000"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <!-- Document Upload Section -->
            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-upload me-2 text-danger"></i>
                    Upload Learning Materials
                </h3>
                <p class="text-muted mb-4">Upload documents, presentations, and interactive materials for students</p>

                <div class="mb-4">
                    <label asp-for="DocumentFiles" class="form-label">
                        <i class="fas fa-file me-2"></i>Upload Documents *
                    </label>
                    
                    <div class="file-upload-area" id="fileUploadArea">
                        <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
                        <h5>Drop files here or click to browse</h5>
                        <p class="text-muted mb-3">
                            Supported formats: PDF, DOC, DOCX, PPT, PPTX, TXT, XLS, XLSX
                        </p>
                        <p class="text-muted">
                            <small>Maximum file size: 10MB per file</small>
                        </p>
                        <input asp-for="DocumentFiles" type="file" class="form-control d-none" multiple
                            accept=".pdf,.doc,.docx,.ppt,.pptx,.txt,.xls,.xlsx" id="documentFileInput" />
                        <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('documentFileInput').click()">
                            <i class="fas fa-plus me-2"></i>Select Files
                        </button>
                    </div>
                    
                    <div class="uploaded-files" id="uploadedFilesList" style="display: none;">
                        <h6 class="mt-3 mb-2">Uploaded Files:</h6>
                        <div id="fileItems"></div>
                    </div>
                    
                    <div class="form-text mt-2">
                        <i class="fas fa-info-circle me-1"></i>
                        Upload multiple files that students will use for hands-on learning
                    </div>
                </div>

                <div class="mb-4">
                    <label asp-for="DocumentDescription" class="form-label">
                        <i class="fas fa-info me-2"></i>Materials Description
                    </label>
                    <textarea asp-for="DocumentDescription" class="form-control" rows="4"
                        placeholder="Explain what students will find in these materials and how to use them effectively. Include any special instructions or prerequisites."
                        maxlength="1000"></textarea>
                    <span asp-validation-for="DocumentDescription" class="text-danger"></span>
                    <div class="form-text">
                        <i class="fas fa-lightbulb me-1"></i>
                        Help students understand how to work with the uploaded materials
                    </div>
                </div>

                <div class="mb-4">
                    <label asp-for="Content" class="form-label">
                        <i class="fas fa-file-alt me-2"></i>Lesson Instructions *
                    </label>
                    <textarea asp-for="Content" class="form-control" rows="8"
                        placeholder="Provide detailed instructions for students on how to work with the uploaded materials:

• What should students do with each file?
• Are there specific exercises or tasks to complete?
• What should students focus on while studying these materials?
• Any prerequisites or preparation needed?
• Expected learning outcomes

Be specific and clear to guide students through the interactive experience."
                        maxlength="5000"></textarea>
                    <span asp-validation-for="Content" class="text-danger"></span>
                    <div class="form-text">
                        <i class="fas fa-tasks me-1"></i>
                        Provide step-by-step guidance for students to get the most from this lesson
                    </div>
                </div>
            </div>

            <!-- Advanced Settings -->
            <div class="form-section">
                <h3 class="section-title">
                    <i class="fas fa-cog me-2"></i>
                    Lesson Settings
                </h3>
                <p class="text-muted mb-4">Configure access and completion requirements</p>

                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-check form-switch mb-4" style="padding-left: 2rem;">
                            <input asp-for="IsLocked" class="form-check-input" type="checkbox" />
                            <label asp-for="IsLocked" class="form-check-label">
                                <i class="fas fa-lock me-2 text-warning"></i>
                                <strong>Lock Lesson</strong>
                                <div class="small text-muted mt-1">Require completion of previous lessons</div>
                            </label>
                        </div>

                        @if (Model.HasExistingLessons)
                        {
                            <div class="mb-4" id="unlockAfterSection" style="display: none;">
                                <label asp-for="UnlockAfterLessonId" class="form-label">
                                    <i class="fas fa-unlock me-2"></i>Unlock After Lesson
                                </label>
                                <select asp-for="UnlockAfterLessonId" class="form-select">
                                    <option value="">No prerequisite</option>
                                    @foreach (var lesson in Model.ExistingLessons.OrderBy(l => l.LessonOrder))
                                    {
                                        <option value="@lesson.LessonId">Lesson @lesson.LessonOrder: @lesson.LessonName</option>
                                    }
                                </select>
                            </div>
                        }

                        <div class="form-check form-switch mb-4" style="padding-left: 2rem;">
                            <input asp-for="IsMandatory" class="form-check-input" type="checkbox" checked />
                            <label asp-for="IsMandatory" class="form-check-label">
                                <i class="fas fa-exclamation-circle me-2 text-info"></i>
                                <strong>Mandatory Lesson</strong>
                                <div class="small text-muted mt-1">Required for course completion</div>
                            </label>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-check form-switch mb-4" style="padding-left: 2rem;">
                            <input asp-for="RequiresQuizPass" class="form-check-input" type="checkbox" />
                            <label asp-for="RequiresQuizPass" class="form-check-label">
                                <i class="fas fa-question-circle me-2 text-success"></i>
                                <strong>Requires Quiz Pass</strong>
                                <div class="small text-muted mt-1">Students must pass a quiz after this lesson</div>
                            </label>
                        </div>

                        <div class="mb-4" id="quizScoreSection" style="display: none;">
                            <label asp-for="MinQuizScore" class="form-label">
                                <i class="fas fa-percentage me-2"></i>Minimum Quiz Score (%)
                            </label>
                            <input asp-for="MinQuizScore" type="number" class="form-control" min="0" max="100" placeholder="70" />
                            <span asp-validation-for="MinQuizScore" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-4">
                            <label asp-for="MinCompletionPercentage" class="form-label">
                                <i class="fas fa-chart-line me-2"></i>Minimum Completion (%)
                            </label>
                            <input asp-for="MinCompletionPercentage" type="number" class="form-control" min="0" max="100" placeholder="100" />
                            <span asp-validation-for="MinCompletionPercentage" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Percentage of materials that must be accessed/downloaded
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-4">
                            <label asp-for="MinTimeSpent" class="form-label">
                                <i class="fas fa-clock me-2"></i>Minimum Time (minutes)
                            </label>
                            <input asp-for="MinTimeSpent" type="number" class="form-control" min="0" placeholder="10" />
                            <span asp-validation-for="MinTimeSpent" class="text-danger"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle me-1"></i>
                                Minimum time students should spend working with materials
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="form-section text-center">
                <a href="@Url.Action("SelectLessonType", new { chapterId = Model.ChapterId })" 
                   class="btn btn-outline-secondary me-3">
                    <i class="fas fa-arrow-left me-2"></i>Back to Lesson Types
                </a>
                <button type="submit" class="btn btn-danger">
                    <i class="fas fa-save me-2"></i>Create Interactive Lesson
                </button>
            </div>
        </form>
    </div>

    <!-- Include Footer partial view -->
    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/components/toast-notifications.js"></script>
    <script src="~/js/components/loader.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // File upload functionality
            const fileUploadArea = document.getElementById('fileUploadArea');
            const fileInput = document.getElementById('documentFileInput');
            const uploadedFilesList = document.getElementById('uploadedFilesList');
            const fileItems = document.getElementById('fileItems');
            let selectedFiles = [];

            // File type icons mapping
            const fileIcons = {
                'pdf': 'fas fa-file-pdf text-danger',
                'doc': 'fas fa-file-word text-primary',
                'docx': 'fas fa-file-word text-primary',
                'ppt': 'fas fa-file-powerpoint text-warning',
                'pptx': 'fas fa-file-powerpoint text-warning',
                'xls': 'fas fa-file-excel text-success',
                'xlsx': 'fas fa-file-excel text-success',
                'txt': 'fas fa-file-alt text-secondary',
                'default': 'fas fa-file text-muted'
            };

            // Format file size
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            // Get file icon
            function getFileIcon(filename) {
                const extension = filename.split('.').pop().toLowerCase();
                return fileIcons[extension] || fileIcons['default'];
            }

            // Update file display
            function updateFileDisplay() {
                if (selectedFiles.length > 0) {
                    uploadedFilesList.style.display = 'block';
                    fileItems.innerHTML = '';
                    
                    selectedFiles.forEach((file, index) => {
                        const fileItem = document.createElement('div');
                        fileItem.className = 'file-item';
                        fileItem.innerHTML = `
                            <div class="file-info">
                                <i class="${getFileIcon(file.name)} file-icon"></i>
                                <div class="file-details">
                                    <div class="file-name">${file.name}</div>
                                    <div class="file-size">${formatFileSize(file.size)}</div>
                                </div>
                            </div>
                            <button type="button" class="remove-file" onclick="removeFile(${index})">
                                <i class="fas fa-times"></i>
                            </button>
                        `;
                        fileItems.appendChild(fileItem);
                    });
                } else {
                    uploadedFilesList.style.display = 'none';
                }
            }

            // Remove file function
            window.removeFile = function(index) {
                selectedFiles.splice(index, 1);
                updateFileDisplay();
                updateFileInput();
            };

            // Update file input
            function updateFileInput() {
                const dt = new DataTransfer();
                selectedFiles.forEach(file => dt.items.add(file));
                fileInput.files = dt.files;
            }

            // File input change event
            fileInput.addEventListener('change', function() {
                const newFiles = Array.from(this.files);
                
                // Validate file sizes
                const oversizedFiles = newFiles.filter(file => file.size > 10 * 1024 * 1024);
                if (oversizedFiles.length > 0) {
                    alert(`The following files exceed the 10MB limit: ${oversizedFiles.map(f => f.name).join(', ')}`);
                    return;
                }
                
                // Add new files to selected files (avoiding duplicates)
                newFiles.forEach(file => {
                    if (!selectedFiles.some(f => f.name === file.name && f.size === file.size)) {
                        selectedFiles.push(file);
                    }
                });
                
                updateFileDisplay();
                updateFileInput();
            });

            // Drag and drop functionality
            fileUploadArea.addEventListener('dragover', function(e) {
                e.preventDefault();
                this.classList.add('dragover');
            });

            fileUploadArea.addEventListener('dragleave', function(e) {
                e.preventDefault();
                this.classList.remove('dragover');
            });

            fileUploadArea.addEventListener('drop', function(e) {
                e.preventDefault();
                this.classList.remove('dragover');
                
                const files = Array.from(e.dataTransfer.files);
                const validFiles = files.filter(file => {
                    const extension = file.name.split('.').pop().toLowerCase();
                    return ['pdf', 'doc', 'docx', 'ppt', 'pptx', 'txt', 'xls', 'xlsx'].includes(extension);
                });
                
                if (validFiles.length !== files.length) {
                    alert('Some files were not added because they are not in supported formats.');
                }
                
                // Validate file sizes
                const oversizedFiles = validFiles.filter(file => file.size > 10 * 1024 * 1024);
                if (oversizedFiles.length > 0) {
                    alert(`The following files exceed the 10MB limit: ${oversizedFiles.map(f => f.name).join(', ')}`);
                    return;
                }
                
                // Add valid files
                validFiles.forEach(file => {
                    if (!selectedFiles.some(f => f.name === file.name && f.size === file.size)) {
                        selectedFiles.push(file);
                    }
                });
                
                updateFileDisplay();
                updateFileInput();
            });

            // Click to upload
            fileUploadArea.addEventListener('click', function(e) {
                if (e.target.tagName !== 'BUTTON') {
                    fileInput.click();
                }
            });

            // Toggle sections based on checkboxes
            const isLockedCheckbox = document.querySelector('input[name="IsLocked"]');
            const unlockAfterSection = document.getElementById('unlockAfterSection');
            
            if (isLockedCheckbox && unlockAfterSection) {
                isLockedCheckbox.addEventListener('change', function() {
                    if (this.checked) {
                        unlockAfterSection.style.display = 'block';
                    } else {
                        unlockAfterSection.style.display = 'none';
                    }
                });
            }
            
            const requiresQuizPassCheckbox = document.querySelector('input[name="RequiresQuizPass"]');
            const quizScoreSection = document.getElementById('quizScoreSection');
            
            if (requiresQuizPassCheckbox && quizScoreSection) {
                requiresQuizPassCheckbox.addEventListener('change', function() {
                    if (this.checked) {
                        quizScoreSection.style.display = 'block';
                    } else {
                        quizScoreSection.style.display = 'none';
                    }
                });
            }
        });
    </script>
</body>
</html>
