@model DataAccessLayer.Models.ViewModels.VietQRViewModel

<!-- VietQR Generator Card -->
<div class="profile-card">
    <div class="card-header">
        <h3><i class="fas fa-qrcode"></i> VietQR Generator</h3>
        <p class="text-muted small mb-0">Generate VietQR code for easy payment transfers</p>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("GenerateVietQR", "Profile", FormMethod.Post, new { @id = "vietqr-form", @class = "vietqr-form" }))
        {
            @Html.AntiForgeryToken()
            
            <div class="row">
                <!-- Bank Selection -->
                <div class="col-md-6 mb-3">
                    <label for="BankId" class="form-label">
                        <i class="fas fa-university text-primary me-2"></i>Bank
                    </label>
                    @Html.DropDownListFor(m => m.BankId, new SelectList(new[]
                    {
                        new { Value = "970415", Text = "VietinBank" },
                        new { Value = "970416", Text = "ACB Bank" },
                        new { Value = "970405", Text = "Agribank" },
                        new { Value = "970422", Text = "MB Bank" },
                        new { Value = "970407", Text = "Techcombank" },
                        new { Value = "970432", Text = "VPBank" },
                        new { Value = "970418", Text = "BIDV" },
                        new { Value = "970403", Text = "Sacombank" },
                        new { Value = "970406", Text = "DongÃ¡ Bank" },
                        new { Value = "970409", Text = "BacABank" },
                        new { Value = "970412", Text = "Phuong Dong Bank" },
                        new { Value = "970414", Text = "Oceanbank" },
                        new { Value = "970419", Text = "NCB Bank" },
                        new { Value = "970423", Text = "Timo Bank" },
                        new { Value = "970426", Text = "VIB Bank" },
                        new { Value = "970429", Text = "SCB Bank" },
                        new { Value = "970431", Text = "Eximbank" },
                        new { Value = "970433", Text = "VietBank" },
                        new { Value = "970436", Text = "Vietcombank" },
                        new { Value = "970438", Text = "Bao Viet Bank" },
                        new { Value = "970440", Text = "SeABank" },
                        new { Value = "970441", Text = "VRB" },
                        new { Value = "970443", Text = "SHB Bank" },
                        new { Value = "970448", Text = "OCB Bank" },
                        new { Value = "970449", Text = "LienVietPostBank" },
                        new { Value = "970454", Text = "VietCapitalBank" },
                        new { Value = "970458", Text = "UOB Bank" },
                        new { Value = "970463", Text = "TPBank" },
                        new { Value = "970466", Text = "KienLongBank" },
                        new { Value = "999888", Text = "Cake by VPBank" }
                    }, "Value", "Text", Model.BankId), new { @class = "form-select", @required = "required" })
                    @Html.ValidationMessageFor(m => m.BankId, "", new { @class = "text-danger" })
                </div>

                <!-- Account Number -->
                <div class="col-md-6 mb-3">
                    <label for="AccountNumber" class="form-label">
                        <i class="fas fa-credit-card text-primary me-2"></i>Account Number
                    </label>
                    @Html.TextBoxFor(m => m.AccountNumber, new { @class = "form-control", @placeholder = "Enter account number", @maxlength = "19", @required = "required" })
                    @Html.ValidationMessageFor(m => m.AccountNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <!-- Template Selection -->
                <div class="col-md-6 mb-3">
                    <label for="Template" class="form-label">
                        <i class="fas fa-palette text-primary me-2"></i>QR Template
                    </label>
                    @Html.DropDownListFor(m => m.Template, new SelectList(new[]
                    {
                        new { Value = "compact2", Text = "Compact 2 (540x640) - Full Info" },
                        new { Value = "compact", Text = "Compact (540x540) - With Logos" },
                        new { Value = "qr_only", Text = "QR Only (480x480) - Simple QR" },
                        new { Value = "print", Text = "Print (600x776) - Full Details" }
                    }, "Value", "Text", Model.Template), new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Template, "", new { @class = "text-danger" })
                </div>

                <!-- Amount -->
                <div class="col-md-6 mb-3">
                    <label for="Amount" class="form-label">
                        <i class="fas fa-money-bill text-primary me-2"></i>Amount (VND) - Optional
                    </label>
                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @placeholder = "Enter amount", @type = "number", @min = "1", @max = "9999999999999" })
                    @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <!-- Account Name -->
                <div class="col-md-6 mb-3">
                    <label for="AccountName" class="form-label">
                        <i class="fas fa-user text-primary me-2"></i>Account Holder Name - Optional
                    </label>
                    @Html.TextBoxFor(m => m.AccountName, new { @class = "form-control", @placeholder = "Enter account holder name", @maxlength = "100" })
                    @Html.ValidationMessageFor(m => m.AccountName, "", new { @class = "text-danger" })
                </div>

                <!-- Description -->
                <div class="col-md-6 mb-3">
                    <label for="Description" class="form-label">
                        <i class="fas fa-comment text-primary me-2"></i>Transfer Description - Optional
                    </label>
                    @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @placeholder = "Enter transfer description", @maxlength = "50" })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    <div class="form-text">Maximum 50 characters, no special characters</div>
                </div>
            </div>

            <div class="text-center mb-3">
                <button type="submit" class="btn btn-primary btn-lg">
                    <i class="fas fa-qrcode me-2"></i>Generate VietQR
                </button>
            </div>
        }

        <!-- Generated QR Code Display -->
        @if (!string.IsNullOrEmpty(Model.GeneratedQRUrl))
        {
            <div class="qr-result mt-4">
                <hr>
                <h5 class="text-center mb-3">
                    <i class="fas fa-check-circle text-success me-2"></i>Generated VietQR Code
                </h5>
                
                <div class="text-center">
                    <div class="qr-image-container mb-3">
                        <img src="@Model.GeneratedQRUrl" alt="VietQR Code" class="qr-image" style="max-width: 100%; height: auto; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" />
                    </div>
                    
                    <div class="qr-actions">
                        <a href="@Model.GeneratedQRUrl" download="vietqr-code.png" class="btn btn-success me-2">
                            <i class="fas fa-download me-2"></i>Download QR
                        </a>
                        <button type="button" class="btn btn-outline-primary" onclick="copyQRUrl('@Model.GeneratedQRUrl')">
                            <i class="fas fa-copy me-2"></i>Copy URL
                        </button>
                    </div>
                    
                    <div class="mt-3">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>How to use:</strong> Save or share this QR code. Others can scan it to transfer money directly to your account.
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
function copyQRUrl(url) {
    navigator.clipboard.writeText(url).then(function() {
        // Show success message
        showToast('success', 'QR URL copied to clipboard!');
    }).catch(function(err) {
        // Fallback for older browsers
        const textArea = document.createElement('textarea');
        textArea.value = url;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
        showToast('success', 'QR URL copied to clipboard!');
    });
}

// Function to show toast notification
function showToast(type, message) {
    // Create toast element
    const toast = document.createElement('div');
    toast.className = `alert alert-${type === 'success' ? 'success' : 'danger'} alert-dismissible fade show position-fixed`;
    toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
    toast.innerHTML = `
        <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'} me-2"></i>
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.body.appendChild(toast);
    
    // Auto remove after 3 seconds
    setTimeout(() => {
        if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
        }
    }, 3000);
}

// Handle form submission with AJAX
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('vietqr-form');
    if (form) {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(form);
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            
            // Show loading state
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Generating...';
            submitBtn.disabled = true;
            
            fetch(form.action, {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(html => {
                // Replace the entire card content
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const newContent = doc.querySelector('.profile-card');
                
                if (newContent) {
                    form.closest('.profile-card').outerHTML = newContent.outerHTML;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('error', 'An error occurred while generating the QR code.');
            })
            .finally(() => {
                // Reset button state
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            });
        });
    }
});
</script>
