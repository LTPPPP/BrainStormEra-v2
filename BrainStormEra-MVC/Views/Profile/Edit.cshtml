@model BrainStormEra_MVC.Models.ViewModels.EditProfileViewModel
@{
    ViewData["Title"] = "Edit Profile";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - BrainStormEra</title>
    <meta name="description" content="BrainStormEra - Edit your personal profile">
    <link rel="icon" type="image/x-icon" href="~/img/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css">
    <link rel="stylesheet" href="~/css/layouts/base.css">
    <link rel="stylesheet" href="~/css/components/header.css">
    <link rel="stylesheet" href="~/css/components/loader.css">
    <link rel="stylesheet" href="~/css/pages/Course/courses.css">
    <link rel="stylesheet" href="~/css/components/footer.css">
    <link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css">
    <link rel="stylesheet" href="~/css/pages/Auth/profile.css">
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" as="style">
    <!-- Load page loader script -->
    <script src="~/js/components/loader.js" defer></script>
    <!-- Toast notifications CSS -->
    <link rel="stylesheet" href="~/css/components/toast-notifications.css">
</head>

<body>
    <!-- Display toast notifications from TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Page Loader -->
    <div class="page-loader">
        <div class="loader"></div>
    </div>

    <!-- Include Header partial view -->
    @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml")

    <!-- Main Content -->
    <div class="container main-content">
        <div class="profile-container" style="margin-top: 2rem;">
            <div class="profile-edit-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h2><i class="fas fa-user-edit"></i> Edit Profile</h2>
                    <a href="@Url.Action("Index", "Profile")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back
                    </a>
                </div>
            </div>

            <div class="profile-edit-content">
                <form asp-action="Edit" method="post" enctype="multipart/form-data" class="profile-edit-form">
                    <div class="row">
                        <!-- Profile Image Section -->
                        <div class="col-md-4">
                            <div class="profile-image-section">
                                <div class="profile-image-container">
                                    @if (!string.IsNullOrEmpty(Model.CurrentImagePath))
                                    {
                                        <img id="profileImagePreview" src="@Url.Action("GetAvatar", "Profile")"
                                            alt="Profile Image" class="profile-image-preview" />
                                    }
                                    else
                                    {
                                        <div id="profileImagePreview" class="profile-image-placeholder">
                                            <i class="fas fa-user"></i>
                                        </div>
                                    }
                                    <div class="image-upload-overlay">
                                        <i class="fas fa-camera"></i>
                                        <span>Change Photo</span>
                                    </div>
                                </div>
                                <div class="form-group mt-3">
                                    <label for="ProfileImage" class="form-label">Profile Picture</label>
                                    <input asp-for="ProfileImage" type="file" class="form-control"
                                        id="profileImageInput" accept="image/*" />
                                    <span asp-validation-for="ProfileImage" class="text-danger"></span>
                                    <small class="form-text text-muted">Accepts JPG, PNG files. Maximum size
                                        5MB.</small>
                                </div>
                                @if (!string.IsNullOrEmpty(Model.CurrentImagePath))
                                {
                                    <div class="form-group mt-2">
                                        <button type="button" class="btn btn-outline-danger btn-sm" id="deleteAvatarBtn">
                                            <i class="fas fa-trash"></i> Remove Avatar
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Form Fields Section -->
                        <div class="col-md-8">
                            <div class="profile-form-section">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label asp-for="FullName" class="form-label required">Full Name</label>
                                            <input asp-for="FullName" class="form-control"
                                                placeholder="Enter full name" />
                                            <span asp-validation-for="FullName" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label asp-for="Email" class="form-label required">Email</label>
                                            <input asp-for="Email" class="form-control" placeholder="Enter email" />
                                            <span asp-validation-for="Email" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                                            <input asp-for="PhoneNumber" class="form-control"
                                                placeholder="Enter phone number" />
                                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label asp-for="Gender" class="form-label">Gender</label>
                                            <select asp-for="Gender" class="form-control">
                                                <option value="">Select gender</option>
                                                <option value="Nam">Male</option>
                                                <option value="Nữ">Female</option>
                                                <option value="Khác">Other</option>
                                            </select>
                                            <span asp-validation-for="Gender" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label asp-for="DateOfBirth" class="form-label">Date of Birth</label>
                                            <input asp-for="DateOfBirth" type="date" class="form-control" />
                                            <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label asp-for="UserAddress" class="form-label">Address</label>
                                    <textarea asp-for="UserAddress" class="form-control" rows="3"
                                        placeholder="Enter address"></textarea>
                                    <span asp-validation-for="UserAddress" class="text-danger"></span>
                                </div>

                                <input asp-for="CurrentImagePath" type="hidden" />
                                <div class="form-actions">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save"></i> Save Changes
                                    </button>
                                    <a href="@Url.Action("Index", "Profile")" class="btn btn-secondary">
                                        <i class="fas fa-times"></i> Cancel
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Footer -->
    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JS -->
    <script src="~/js/components/loader.js"></script>
    <script src="~/js/pages/Auth/profile-edit.js"></script>
    <script src="~/js/shared/toast-notifications.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Hide preloader when page is loaded
        window.addEventListener('load', function () {
            document.querySelector('.page-loader').classList.add('loaded');
            setTimeout(() => {
                document.querySelector('.page-loader').style.display = 'none';
            }, 500);
        });

        // Back to top function
        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        }

        // Enhanced profile card interactions
        document.addEventListener('DOMContentLoaded', function () {
            const profileCards = document.querySelectorAll('.profile-card, .profile-image-section, .profile-form-section');

            profileCards.forEach(card => {
                card.addEventListener('mouseenter', function () {
                    this.style.transform = 'translateY(-5px)';
                });

                card.addEventListener('mouseleave', function () {
                    this.style.transform = 'translateY(0)';
                });
            });

            // Add animation classes to elements when they come into view
            const animateElements = document.querySelectorAll('.profile-image-section, .profile-form-section, .form-group');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animated');
                        observer.unobserve(entry.target);
                    }
                });
            }, { threshold: 0.1 });

            animateElements.forEach(element => {
                observer.observe(element);
            });
        });
    </script>
</body>

</html>
