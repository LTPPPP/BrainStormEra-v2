@model DataAccessLayer.Models.ViewModels.QuizTakeViewModel

@{
    ViewData["Title"] = "Take Quiz - " + Model.QuizName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="quiz-take-container">
    <div class="quiz-header">
        <div class="quiz-info">
            <h1 class="quiz-title">@Model.QuizName</h1>
            @if (!string.IsNullOrEmpty(Model.QuizDescription))
            {
                <p class="quiz-description">@Model.QuizDescription</p>
            }

            <div class="quiz-metadata">
                @if (Model.TimeLimit.HasValue)
                {
                    <div class="time-limit">
                        <i class="fas fa-clock"></i>
                        Time Limit: @Model.TimeLimit minutes
                    </div>
                }
                @if (Model.PassingScore.HasValue)
                {
                    <div class="passing-score">
                        <i class="fas fa-target"></i>
                        Passing Score: @Model.PassingScore%
                    </div>
                }
                <div class="attempt-info">
                    <i class="fas fa-redo"></i>
                    Attempt @Model.CurrentAttemptNumber of @Model.MaxAttempts
                </div>
                @if (Model.IsOngoingAttempt)
                {
                    <div class="alert alert-info mt-2">
                        <i class="fas fa-info-circle me-2"></i>
                        You are resuming your previous attempt. Your progress has been saved.
                    </div>
                }
            </div>
        </div>

        @if (Model.TimeLimit.HasValue)
        {
            <div class="timer-container">
                <div class="timer" id="quiz-timer">
                    <i class="fas fa-clock"></i>
                    <span id="time-remaining">@(Model.TimeLimit):00</span>
                </div>
                <div class="timer-warning" id="timer-warning" style="display: none;">
                    <i class="fas fa-exclamation-triangle"></i>
                    Time is running out!
                </div>
            </div>
        }
    </div>

    <form id="quiz-form" asp-action="Submit" asp-controller="Quiz" method="post">
        <input type="hidden" asp-for="QuizId" />
        <input type="hidden" asp-for="AttemptId" />
        <input type="hidden" asp-for="StartTime" />
        <input type="hidden" name="SubmissionTime" id="submission-time" />

        <div class="questions-container">
            @for (int i = 0; i < Model.Questions.Count; i++)
            {
                var question = Model.Questions[i];
                <div class="question-card" data-question-id="@question.QuestionId">
                    <div class="question-header">
                        <span class="question-number">Question @(i + 1)</span>
                        @if (question.Points.HasValue)
                        {
                            <span class="question-points">(@question.Points pts)</span>
                        }
                    </div>

                    <div class="question-text">
                        @Html.Raw(question.QuestionText)
                    </div>

                    <!-- Hidden field for QuestionId -->
                    <input type="hidden" name="UserAnswers[@i].QuestionId" value="@question.QuestionId" />

                    <div class="answer-options">
                        @if (question.QuestionType == "multiple_choice")
                        {
                            @for (int j = 0; j < question.AnswerOptions.Count; j++)
                            {
                                var option = question.AnswerOptions[j];
                                <div class="answer-option">
                                    <!-- Keep original checkbox if your model expects SelectedOptionIds -->
                                    <input type="checkbox" id="option_@(i)_@(j)" name="UserAnswers[@i].SelectedOptionIds"
                                        value="@option.OptionId" @(option.IsSelected ? "checked" : "") />
                                    <label for="option_@(i)_@(j)">
                                        <span class="option-letter">@(((char)('A' + j)).ToString())</span>
                                        <span class="option-text">@option.OptionText</span>
                                    </label>
                                </div>
                            }
                        }
                    </div>
                </div>
            }
        </div>

        <div class="quiz-navigation">
            <div class="navigation-buttons">
                <button type="button" class="btn btn-secondary" id="save-draft" style="display: none;">
                    <i class="fas fa-save"></i>
                    Save Draft
                </button>
                <button type="submit" class="btn btn-primary" id="submit-quiz">
                    <i class="fas fa-paper-plane"></i>
                    Submit Quiz
                </button>
            </div>
        </div>
    </form>
</div>

<!-- Auto-submit warning modal -->
<div class="modal fade" id="auto-submit-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Time's Up!</h5>
            </div>
            <div class="modal-body">
                <p>Your time limit has been reached. The quiz will be automatically submitted.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirm-auto-submit">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Confirmation modal -->
<div class="modal fade" id="submit-confirmation-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Submission</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to submit your quiz? You cannot change your answers after submission.</p>
                <div id="unanswered-warning" class="alert alert-warning" style="display: none;">
                    <i class="fas fa-exclamation-triangle"></i>
                    You have <span id="unanswered-count"></span> unanswered questions.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirm-submit">Submit Quiz</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/pages/Quiz/quiz-take.css" />
}

@section Scripts {
    <script src="~/js/pages/Quiz/quiz-take.js"></script>
    <script>
        // Initialize quiz with server data
        window.quizData = {
            quizId: '@Model.QuizId',
            timeLimit: @(Model.TimeLimit?.ToString() ?? "null"),
            totalQuestions: @Model.Questions.Count,
            // Fixed: Better DateTime serialization
            startTime: @(Model.StartTime?.ToString("yyyy-MM-ddTHH:mm:ss.fffZ") != null ? 
                        $"new Date('{Model.StartTime?.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")}')" : "null")
        };

        // Countdown timer logic
        (function() {
            var timeLimit = @Model.TimeLimit ?? 0;
            if (timeLimit > 0) {
                var totalSeconds = timeLimit * 60;
                var timerElem = document.getElementById('time-remaining');
                var warningElem = document.getElementById('timer-warning');
                var formElem = document.getElementById('quiz-form');
                var interval = setInterval(function() {
                    var min = Math.floor(totalSeconds / 60);
                    var sec = totalSeconds % 60;
                    timerElem.textContent = min + ':' + (sec < 10 ? '0' : '') + sec;
                    if (totalSeconds === 60 && warningElem) {
                        warningElem.style.display = '';
                    }
                    if (totalSeconds <= 0) {
                        clearInterval(interval);
                        timerElem.textContent = '0:00';
                        // Auto-submit the quiz
                        if (formElem) {
                            // Show modal if exists, else submit
                            var autoModal = document.getElementById('auto-submit-modal');
                            if (autoModal) {
                                $(autoModal).modal('show');
                                document.getElementById('confirm-auto-submit').onclick = function() {
                                    formElem.submit();
                                };
                            } else {
                                formElem.submit();
                            }
                        }
                    }
                    totalSeconds--;
                }, 1000);
            }
        })();
    </script>
}