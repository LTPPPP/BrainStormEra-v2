@model DataAccessLayer.Models.ViewModels.QuizResultViewModel

@{
    ViewData["Title"] = "Quiz Result - " + Model.QuizName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var isPassed = Model.IsPassed == true;
    var resultClass = isPassed ? "passed" : "failed";
}

<div class="quiz-result-container">
    <!-- Result Header -->
    <div class="result-header @resultClass">
        <div class="result-icon">
            @if (isPassed)
            {
                <i class="fas fa-check-circle"></i>
            }
            else
            {
                <i class="fas fa-times-circle"></i>
            }
        </div>
        
        <div class="result-info">
            <h1 class="quiz-title">@Model.QuizName</h1>
            <div class="result-status">
                @if (isPassed)
                {
                    <span class="status-text passed">Congratulations! You passed!</span>
                }
                else
                {
                    <span class="status-text failed">Unfortunately, you didn't pass this time.</span>
                }
            </div>
        </div>
    </div>

    <!-- Score Summary -->
    <div class="score-summary">
        <div class="score-card main-score">
            <div class="score-label">Your Score</div>
            <div class="score-value">
                <span class="score-fraction">(@Model.Score/@Model.TotalPoints points)</span>
            </div>
        </div>

        <div class="score-details">
            <div class="score-item">
                <div class="score-label">Passing Score</div>
                <div class="score-value">@(Model.PassingScore?.ToString("F1") ?? "0")%</div>
            </div>
            
            <div class="score-item">
                <div class="score-label">Time Spent</div>
                <div class="score-value">
                    @if (Model.TimeSpent.HasValue)
                    {
                        var timeSpan = TimeSpan.FromMinutes(Model.TimeSpent.Value);
                        @($"{(int)timeSpan.TotalMinutes}:{timeSpan.Seconds:D2} min")
                    }
                    else
                    {
                        @("N/A")
                    }
                </div>
            </div>

            <div class="score-item">
                <div class="score-label">Correct Answers</div>
                <div class="score-value">
                    @(Model.QuestionResults.Count(q => q.IsCorrect == true)) / @Model.QuestionResults.Count
                </div>
            </div>
            
            <div class="score-item">
                <div class="score-label">Attempt</div>
                <div class="score-value">@Model.AttemptNumber of @Model.MaxAttempts</div>
            </div>
            
            @if (Model.RemainingAttempts > 0)
            {
                <div class="score-item">
                    <div class="score-label">Remaining Attempts</div>
                    <div class="score-value">@Model.RemainingAttempts</div>
                </div>
            }
        </div>
    </div>

    <!-- Navigation Buttons -->
    <div class="result-actions">
        @if (Model.CanRetake && !isPassed)
        {
            <a href="@Url.Action("Take", "Quiz", new { id = Model.QuizId })" class="btn btn-primary">
                <i class="fas fa-redo"></i>
                Retake Quiz
            </a>
        }
        
        @if (isPassed && !string.IsNullOrEmpty(Model.LessonId))
        {
            <a href="@Url.Action("Learn", "Lesson", new { id = Model.LessonId })" class="btn btn-secondary">
                <i class="fas fa-arrow-right"></i>
                Next Lesson
            </a>
        }
        else if (!string.IsNullOrEmpty(Model.CourseId))
        {
            <a href="@Url.Action("Details", "Course", new { id = Model.CourseId })" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i>
                Back to Course
            </a>
        }
        
        <!-- Remove Review Answers button -->
    </div>

    <!-- Remove Question Review Section -->

    <!-- Performance Analysis (optional, keep or remove as needed) -->
    <div class="performance-analysis" id="performance-analysis" style="display: none;">
        <h3>Performance Analysis</h3>
        
        <div class="analysis-cards">
            <div class="analysis-card">
                <div class="analysis-label">Correct Answers</div>
                <div class="analysis-value">
                    @Model.QuestionResults.Count(q => q.IsCorrect == true) / @Model.QuestionResults.Count
                </div>
            </div>
            
            <div class="analysis-card">
                <div class="analysis-label">Average Time per Question</div>
                <div class="analysis-value">
                    @if (Model.TimeSpent.HasValue && Model.QuestionResults.Count > 0)
                    {
                        var avgTime = Model.TimeSpent.Value / Model.QuestionResults.Count;
                        @($"{avgTime:F1} min")
                    }
                    else
                    {
                        @("N/A")
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/pages/Quiz/quiz-result.css" />
}

@section Scripts {
    <script src="~/js/pages/Quiz/quiz-result.js"></script>

}
