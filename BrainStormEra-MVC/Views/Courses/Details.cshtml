@model BrainStormEra_MVC.Models.ViewModels.CourseDetailViewModel
@{
    ViewData["Title"] = Model.CourseName;
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - BrainStormEra</title>
    <meta name="description" content="@Model.CourseName - @(Model.CourseDescription?.Length > 150 ? Model.CourseDescription.Substring(0, 150) + "..." : Model.CourseDescription) - BrainStormEra">
    <link rel="icon" type="image/x-icon" href="~/img/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css">
    <link rel="stylesheet" href="~/css/layouts/base.css">
    <link rel="stylesheet" href="~/css/components/header.css">
    <link rel="stylesheet" href="~/css/components/loader.css">
    <link rel="stylesheet" href="~/css/pages/Course/courses.css">
    <link rel="stylesheet" href="~/css/components/footer.css">
    <link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css">
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" as="style">
    <!-- Load page loader script -->
    <script src="~/js/components/loader.js"></script>
    <!-- Toast notifications CSS -->
    <link rel="stylesheet" href="~/css/components/toast-notifications.css">
</head>

<body>
    <!-- Page Loader -->
    <div class="page-loader">
        <div class="loader"></div>
    </div>

    <!-- Header -->
    @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml")

    <!-- Course Details Container -->
    <div class="course-details-container">        
        <!-- Course Header -->
        <div class="course-header">
            <div class="course-header-bg"></div>
            <div class="container">
                <div class="row">
                    <div class="col-lg-8">
                        <div class="course-header-content">
                            <!-- Course Categories -->
                            @if (Model.Categories != null && Model.Categories.Any())
                            {
                                <div class="course-categories">
                                    @foreach (var category in Model.Categories)
                                    {
                                        <span class="category-badge">
                                            <i class="fas fa-tag"></i>
                                            @category
                                        </span>
                                    }
                                </div>
                            }

                            <!-- Course Title & Subtitle -->
                            <div class="course-title-section">
                                <h1 class="course-title">@Model.CourseName</h1>
                                @if (!string.IsNullOrEmpty(Model.CourseDescription))
                                {
                                    <p class="course-subtitle">
                                        @(Model.CourseDescription.Length > 180 ? Model.CourseDescription.Substring(0, 180) + "..." : Model.CourseDescription)
                                    </p>
                                }
                            </div>

                            <!-- Course Meta Information -->
                            <div class="course-meta-section">
                                <div class="meta-primary">
                                    <div class="meta-item">
                                        <div class="meta-icon">
                                            <i class="fas fa-user-tie"></i>
                                        </div>
                                        <div class="meta-info">
                                            <span class="meta-label">Created by</span>
                                            <span class="meta-value">@Model.AuthorName</span>
                                        </div>
                                    </div>

                                    <div class="meta-item">
                                        <div class="meta-icon rating-icon">
                                            <span class="star-combined">
                                                <i class="fas fa-star-half-alt star-left"></i>
                                                <i class="fas fa-star-half-alt star-right"></i>
                                            </span>
                                        </div>
                                        <div class="meta-info">
                                            <span class="meta-label">Rating</span>                                            <div class="rating-display">
                                                <span class="rating-value">@Model.AverageRating.ToString("F1")</span>
                                                <div class="rating-stars" data-rating="@Model.AverageRating.ToString("F2", System.Globalization.CultureInfo.InvariantCulture)">                                    @{
                                        var rating = (double)Model.AverageRating;
                                        // Special logic: ratings 0.1-0.9 show as half star only
                                        double roundedRating;
                                        if (rating > 0 && rating < 1)
                                        {
                                            roundedRating = 0.5; // Show only half star for ratings 0.1-0.9
                                        }
                                        else
                                        {
                                            roundedRating = Math.Round(rating * 2) / 2; // Round to nearest 0.5 for other values
                                        }
                                        
                                        for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Floor(roundedRating))
                                            {
                                                // Full star
                                                <span class="star-combined">
                                                    <i class="fas fa-star-half-alt star-left"></i>
                                                    <i class="fas fa-star-half-alt star-right"></i>
                                                </span>
                                            }
                                            else if (i - 0.5 <= roundedRating)
                                            {
                                                // Half star
                                                <span class="star-half">
                                                    <i class="fas fa-star-half-alt"></i>
                                                </span>
                                            }
                                            else
                                            {
                                                // Empty star
                                                <span class="star-combined star-empty">
                                                    <i class="fas fa-star-half-alt star-left"></i>
                                                    <i class="fas fa-star-half-alt star-right"></i>
                                                </span>
                                            }
                                                        }
                                                    }
                                                </div>
                                                <span class="rating-count">(@Model.TotalReviews reviews)</span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="meta-item">
                                        <div class="meta-icon">
                                            <i class="fas fa-users"></i>
                                        </div>
                                        <div class="meta-info">
                                            <span class="meta-label">Students</span>
                                            <span class="meta-value">@Model.TotalStudents.ToString("N0") enrolled</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="meta-secondary">
                                    @if (Model.EstimatedDuration > 0)
                                    {
                                        <div class="meta-item">
                                            <i class="fas fa-clock"></i>
                                            <span>@Model.EstimatedDuration hours total</span>
                                        </div>
                                    }

                                    @if (!string.IsNullOrEmpty(Model.DifficultyLevel))
                                    {
                                        <div class="meta-item">
                                            <i class="fas fa-signal"></i>
                                            <span>@Model.DifficultyLevel level</span>
                                        </div>
                                    }

                                    <div class="meta-item">
                                        <i class="fas fa-calendar-alt"></i>
                                        <span>Last updated @Model.CourseUpdatedAt.ToString("MMM yyyy")</span>
                                    </div>

                                    <div class="meta-item">
                                        <i class="fas fa-globe"></i>
                                        <span>English</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Course Stats -->
                            <div class="course-stats">
                                <div class="stat-item">
                                    <div class="stat-icon">
                                        <i class="fas fa-book"></i>
                                    </div>
                                    <div class="stat-content">
                                        <span class="stat-value">@Model.Chapters.Count</span>
                                        <span class="stat-label">Chapters</span>
                                    </div>
                                </div>
                                <div class="stat-item">
                                    <div class="stat-icon">
                                        <i class="fas fa-play-circle"></i>
                                    </div>
                                    <div class="stat-content">
                                        <span class="stat-value">@Model.Chapters.Sum(c => c.Lessons.Count)</span>
                                        <span class="stat-label">Lessons</span>
                                    </div>
                                </div>
                                @if (Model.Chapters.SelectMany(c => c.Lessons).Any(l => l.LessonType == "Quiz"))
                                {
                                    <div class="stat-item">
                                        <div class="stat-icon">
                                            <i class="fas fa-question-circle"></i>
                                        </div>
                                        <div class="stat-content">
                                            <span class="stat-value">@Model.Chapters.SelectMany(c => c.Lessons).Count(l => l.LessonType == "Quiz")</span>
                                            <span class="stat-label">Quizzes</span>
                                        </div>
                                    </div>
                                }
                                @if (Model.Price == 0)
                                {
                                    <div class="stat-item price-tag free">
                                        <div class="stat-icon">
                                            <i class="fas fa-gift"></i>
                                        </div>
                                        <div class="stat-content">
                                            <span class="stat-value">FREE</span>
                                            <span class="stat-label">Course</span>
                                        </div>
                                    </div>                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="course-preview-card">
                            <div class="course-preview-image">
                                <img src="@Model.CourseImage" alt="@Model.CourseName" class="img-fluid">
                                <div class="play-button">
                                    <i class="fas fa-play"></i>
                                </div>
                            </div>
                            <div class="course-preview-content">
                                <div class="course-price">
                                    @if (Model.Price == 0)
                                    {
                                        <span class="free-badge">FREE</span>
                                    }
                                    else
                                    {
                                        <span class="price">$@Model.Price.ToString("F2")</span>
                                    }
                                </div>

                                @if (Model.IsEnrolled)
                                {
                                    <button class="btn btn-success btn-lg w-100 mb-3" disabled>
                                        <i class="fas fa-check-circle me-2"></i>Enrolled
                                    </button>
                                    <a href="#" class="btn btn-outline-primary btn-lg w-100">Continue Learning</a>
                                }
                                else
                                {
                                    <form asp-controller="Course" asp-action="Enroll" method="post" class="enrollment-form">
                                        <input type="hidden" name="courseId" value="@Model.CourseId" />
                                        <button type="submit" class="btn btn-primary btn-lg w-100 mb-3 enroll-btn">
                                            @if (Model.Price == 0)
                                            {
                                                <i class="fas fa-plus me-2"></i>

                                                <span>Enroll for Free</span>
                                            }
                                            else
                                            {
                                                <i class="fas fa-shopping-cart me-2"></i>

                                                <span>Enroll Now</span>
                                            }
                                        </button>
                                    </form>
                                }                                
                                <div class="course-includes">
                                    <h6>This course includes:</h6>
                                    <ul class="includes-list">
                                        @if (Model.Chapters.SelectMany(c => c.Lessons).Any(l => l.LessonType == "Video"))
                                        {
                                            <li><i class="fas fa-video"></i> @Model.Chapters.SelectMany(c => c.Lessons).Count(l => l.LessonType == "Video") video lessons</li>
                                        }
                                        @if (Model.Chapters.SelectMany(c => c.Lessons).Any(l => l.LessonType == "Reading" || l.LessonType == "Article"))
                                        {
                                            <li><i class="fas fa-file-alt"></i> Articles and resources</li>
                                        }
                                        @if (Model.Chapters.SelectMany(c => c.Lessons).Any(l => l.LessonType == "Quiz"))
                                        {
                                            <li><i class="fas fa-question-circle"></i> @Model.Chapters.SelectMany(c => c.Lessons).Count(l => l.LessonType == "Quiz") quizzes</li>
                                        }
                                        <li><i class="fas fa-mobile-alt"></i> Mobile and TV access</li>
                                        <li><i class="fas fa-infinity"></i> Full lifetime access</li>
                                        <li><i class="fas fa-certificate"></i> Certificate of completion</li>
                                        @if (Model.EstimatedDuration > 0)
                                        {
                                            <li><i class="fas fa-clock"></i> @Model.EstimatedDuration hours of content</li>
                                        }
                                    </ul>
                                </div>

                                <div class="share-course mt-3">
                                    <h6>Share this course:</h6>
                                    <div class="share-buttons">
                                        <a href="#" class="share-btn facebook" data-share="facebook"><i
                                                class="fab fa-facebook-f"></i></a>
                                        <a href="#" class="share-btn twitter" data-share="twitter"><i
                                                class="fab fa-twitter"></i></a>
                                        <a href="#" class="share-btn linkedin" data-share="linkedin"><i
                                                class="fab fa-linkedin-in"></i></a>
                                        <a href="#" class="share-btn copy-link" data-share="copy"><i
                                                class="fas fa-link"></i></a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Course Content -->
        <div class="course-content">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8">
                        <!-- Course Navigation Tabs -->
                        <div class="course-nav-tabs">
                            <ul class="nav nav-tabs" id="courseTab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="overview-tab" data-bs-toggle="tab"
                                        data-bs-target="#overview" type="button" role="tab">Overview</button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="curriculum-tab" data-bs-toggle="tab"
                                        data-bs-target="#curriculum" type="button" role="tab">Curriculum</button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="instructor-tab" data-bs-toggle="tab"
                                        data-bs-target="#instructor" type="button" role="tab">Instructor</button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="reviews-tab" data-bs-toggle="tab"
                                        data-bs-target="#reviews" type="button" role="tab">Reviews</button>
                                </li>
                            </ul>
                        </div>

                        <!-- Tab Content -->
                        <div class="tab-content" id="courseTabContent">                            <!-- Overview Tab -->
                            <div class="tab-pane fade show active" id="overview" role="tabpanel">
                                <div class="course-overview">
                                    <h3>Course Description</h3>
                                    <div class="course-description">
                                        @Html.Raw(Model.CourseDescription)
                                    </div>

                                    <h3>Course Details</h3>
                                    <div class="course-details-meta">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="detail-item">
                                                    <strong>Duration:</strong> @Model.EstimatedDuration hours
                                                </div>
                                                <div class="detail-item">
                                                    <strong>Level:</strong> @Model.DifficultyLevel
                                                </div>
                                                <div class="detail-item">
                                                    <strong>Students:</strong> @Model.TotalStudents
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="detail-item">
                                                    <strong>Rating:</strong> @Model.AverageRating.ToString("F1")/5.0 (@Model.TotalReviews reviews)
                                                </div>
                                                <div class="detail-item">
                                                    <strong>Created:</strong> @Model.CourseCreatedAt.ToString("MMM dd, yyyy")
                                                </div>
                                                <div class="detail-item">
                                                    <strong>Last Updated:</strong> @Model.CourseUpdatedAt.ToString("MMM dd, yyyy")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>                            <!-- Curriculum Tab -->
                            <div class="tab-pane fade" id="curriculum" role="tabpanel">
                                <div class="course-curriculum">
                                    <div class="curriculum-header">
                                        <h3>Course Curriculum</h3>
                                        <p>@Model.Chapters.Count chapters • @Model.Chapters.Sum(c => c.Lessons.Count) lessons</p>
                                    </div>

                                    <div class="curriculum-sections">
                                        @foreach (var chapter in Model.Chapters.OrderBy(c => c.ChapterOrder))
                                        {
                                            <div class="curriculum-section">
                                                <div class="section-header" data-bs-toggle="collapse"
                                                    data-bs-target="#chapter@(chapter.ChapterOrder)">
                                                    <h4>@chapter.ChapterOrder. @chapter.ChapterName</h4>
                                                    <div class="section-meta">
                                                        <span>@chapter.Lessons.Count lessons</span>
                                                        <i class="fas fa-chevron-down"></i>
                                                    </div>
                                                </div>
                                                <div class="collapse @(chapter.ChapterOrder == 1 ? "show" : "")" id="chapter@(chapter.ChapterOrder)">
                                                    <div class="section-content">
                                                        @if (!string.IsNullOrEmpty(chapter.ChapterDescription))
                                                        {
                                                            <div class="chapter-description">
                                                                <p>@chapter.ChapterDescription</p>
                                                            </div>
                                                        }
                                                        @foreach (var lesson in chapter.Lessons.OrderBy(l => l.LessonOrder))
                                                        {
                                                            <div class="lecture-item @(lesson.IsLocked ? "locked" : "")">
                                                                <i class="fas @(lesson.LessonType == "Video" ? "fa-play-circle" : lesson.LessonType == "Quiz" ? "fa-question-circle" : "fa-file-alt")"></i>
                                                                <span>@lesson.LessonName</span>
                                                                @if (lesson.EstimatedDuration > 0)
                                                                {
                                                                    <span class="lecture-duration">@lesson.EstimatedDuration min</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="lecture-duration">@lesson.LessonType</span>
                                                                }
                                                                @if (lesson.IsLocked)
                                                                {
                                                                    <i class="fas fa-lock lock-icon"></i>
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>                            <!-- Instructor Tab -->
                            <div class="tab-pane fade" id="instructor" role="tabpanel">
                                <div class="instructor-info">
                                    <div class="instructor-card">
                                        <div class="instructor-avatar">
                                            <img src="@Model.AuthorImage" alt="@Model.AuthorName"
                                                class="img-fluid rounded-circle">
                                        </div>
                                        <div class="instructor-details">
                                            <h3>@Model.AuthorName</h3>
                                            <p class="instructor-title">Course Instructor</p>
                                            <div class="instructor-stats">
                                                <div class="stat">
                                                    <span class="star-combined">
                                                        <i class="fas fa-star-half-alt star-left"></i>
                                                        <i class="fas fa-star-half-alt star-right"></i>
                                                    </span>
                                                    <span>@Model.AverageRating.ToString("F1") Instructor Rating</span>
                                                </div>
                                                <div class="stat">
                                                    <i class="fas fa-users"></i>
                                                    <span>@Model.TotalStudents Students</span>
                                                </div>
                                                <div class="stat">
                                                    <i class="fas fa-graduation-cap"></i>
                                                    <span>Course Author</span>
                                                </div>
                                            </div>
                                            <div class="instructor-bio">
                                                <p>An experienced professional passionate about teaching and helping students achieve their goals
                                                    through practical, hands-on learning experiences.</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>                            <!-- Reviews Tab -->
                            <div class="tab-pane fade" id="reviews" role="tabpanel">
                                <div class="course-reviews">
                                    <div class="reviews-header">
                                        <h3>Student Reviews</h3>                                        <div class="rating-summary">                                            <div class="overall-rating">
                                                <span class="rating-number">@Model.AverageRating.ToString("F1")</span>
                                                <div class="rating-stars" data-rating="@Model.AverageRating.ToString("F2", System.Globalization.CultureInfo.InvariantCulture)">
                                                    @{
                                                        var ratingValue = (double)Model.AverageRating;
                                                        // Special logic: ratings 0.1-0.9 show as half star only
                                                        double roundedRatingValue;
                                                        if (ratingValue > 0 && ratingValue < 1)
                                                        {
                                                            roundedRatingValue = 0.5; // Show only half star for ratings 0.1-0.9
                                                        }
                                                        else
                                                        {
                                                            roundedRatingValue = Math.Round(ratingValue * 2) / 2; // Round to nearest 0.5 for other values
                                                        }
                                                        
                                                        for (int i = 1; i <= 5; i++)
                                                        {
                                                            if (i <= Math.Floor(roundedRatingValue))
                                                            {
                                                                // Full star
                                                                <span class="star-combined">
                                                                    <i class="fas fa-star-half-alt star-left"></i>
                                                                    <i class="fas fa-star-half-alt star-right"></i>
                                                                </span>
                                                            }
                                                            else if (i - 0.5 <= roundedRatingValue)
                                                            {
                                                                // Half star
                                                                <span class="star-half">
                                                                    <i class="fas fa-star-half-alt"></i>
                                                                </span>
                                                            }
                                                            else
                                                            {
                                                                // Empty star
                                                                <span class="star-combined star-empty">
                                                                    <i class="fas fa-star-half-alt star-left"></i>
                                                                    <i class="fas fa-star-half-alt star-right"></i>
                                                                </span>
                                                            }
                                                        }
                                                    }
                                                </div>
                                                <span class="rating-count">(@Model.TotalReviews reviews)</span>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Reviews List -->
                                    <div class="reviews-list">
                                        @if (Model.Reviews != null && Model.Reviews.Any())
                                        {
                                            @foreach (var review in Model.Reviews.Take(10))
                                            {
                                                <div class="review-item">
                                                    <div class="reviewer-info">
                                                        <img src="@review.UserImage" alt="@review.UserName"
                                                            class="reviewer-avatar">
                                                        <div class="reviewer-details">
                                                            <h5>@review.UserName</h5>
                                                            <div class="review-rating">
                                                                @{
                                                                    var reviewRating = (double)review.StarRating;
                                                                    // Special logic: ratings 0.1-0.9 show as half star only
                                                                    double roundedReviewRating;
                                                                    if (reviewRating > 0 && reviewRating < 1)
                                                                    {
                                                                        roundedReviewRating = 0.5; // Show only half star for ratings 0.1-0.9
                                                                    }
                                                                    else
                                                                    {
                                                                        roundedReviewRating = Math.Round(reviewRating * 2) / 2; // Round to nearest 0.5 for other values
                                                                    }
                                                                }
                                                                @for (int i = 1; i <= 5; i++)
                                                                {
                                                                    if (i <= Math.Floor(roundedReviewRating))
                                                                    {
                                                                        <span class="star-combined">
                                                                            <i class="fas fa-star-half-alt star-left"></i>
                                                                            <i class="fas fa-star-half-alt star-right"></i>
                                                                        </span>
                                                                    }
                                                                    else if (i - 0.5 <= roundedReviewRating)
                                                                    {
                                                                        <span class="star-half">
                                                                            <i class="fas fa-star-half-alt"></i>
                                                                        </span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="star-combined star-empty">
                                                                            <i class="fas fa-star-half-alt star-left"></i>
                                                                            <i class="fas fa-star-half-alt star-right"></i>
                                                                        </span>
                                                                    }
                                                                }
                                                            </div>
                                                            <span class="review-date">@review.ReviewDate.ToString("MMM dd, yyyy")</span>
                                                            @if (review.IsVerifiedPurchase)
                                                            {
                                                                <span class="verified-badge">
                                                                    <i class="fas fa-check-circle"></i> Verified Purchase
                                                                </span>
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="review-content">
                                                        <p>@review.ReviewComment</p>
                                                    </div>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="no-reviews">
                                                <i class="fas fa-comment-slash"></i>
                                                <h4>No Reviews Yet</h4>
                                                <p>Be the first to review this course!</p>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>                    <!-- Sidebar -->
                    <div class="col-lg-4">
                        <div class="course-sidebar">
                            <!-- Course Summary -->
                            <div class="sidebar-section">
                                <h4>Course Summary</h4>
                                <div class="course-summary-stats">
                                    <div class="stat-item">
                                        <i class="fas fa-users"></i>
                                        <span><strong>@Model.TotalStudents</strong> students enrolled</span>
                                    </div>
                                    <div class="stat-item">
                                        <span class="star-combined">
                                            <i class="fas fa-star-half-alt star-left"></i>
                                            <i class="fas fa-star-half-alt star-right"></i>
                                        </span>
                                        <span><strong>@Model.AverageRating.ToString("F1")</strong> average rating</span>
                                    </div>
                                    <div class="stat-item">
                                        <i class="fas fa-book"></i>
                                        <span><strong>@Model.Chapters.Count</strong> chapters</span>
                                    </div>
                                    <div class="stat-item">
                                        <i class="fas fa-play-circle"></i>
                                        <span><strong>@Model.Chapters.SelectMany(c => c.Lessons).Count()</strong> lessons</span>
                                    </div>
                                    @if (Model.EstimatedDuration > 0)
                                    {
                                        <div class="stat-item">
                                            <i class="fas fa-clock"></i>
                                            <span><strong>@Model.EstimatedDuration hours</strong> duration</span>
                                        </div>
                                    }
                                    <div class="stat-item">
                                        <i class="fas fa-signal"></i>
                                        <span><strong>@Model.DifficultyLevel</strong> level</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Course Categories -->
                            @if (Model.Categories != null && Model.Categories.Any())
                            {
                                <div class="sidebar-section">
                                    <h4>Categories</h4>
                                    <div class="course-categories-list">
                                        @foreach (var category in Model.Categories)
                                        {
                                            <span class="category-tag">@category</span>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/global.js"></script>
    <script src="~/js/pages/courses.js"></script>

    <!-- Enrollment Success Modal -->
    <div class="modal fade" id="enrollmentModal" tabindex="-1" aria-labelledby="enrollmentModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="enrollmentModalLabel">Enrollment Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="enrollmentMessage"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="continueLearning" style="display: none;">Continue
                        Learning</button>
                </div>
            </div>
        </div>
    </div>
</body>

</html>

