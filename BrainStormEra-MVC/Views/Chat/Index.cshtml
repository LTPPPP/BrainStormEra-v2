@model BusinessLogicLayer.DTOs.Chat.ChatIndexViewModel
@{
    ViewData["Title"] = "Chat";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat - BrainStormEra</title>
    <meta name="description" content="BrainStormEra Chat - Connect with instructors and learners">
    <link rel="icon" type="image/x-icon" href="~/SharedMedia/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layouts/base.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layouts/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/header.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/chatbot.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/payment.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/placeholders.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/loader.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/chat.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BrainStormEra.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/toast-notifications.css">

    @* User authentication meta tags for JavaScript access *@
    @if (User.Identity?.IsAuthenticated == true)
    {
        <meta name="user-id" content="@User.FindFirst("UserId")?.Value" />
        <meta name="user-role" content="@User.FindFirst("UserRole")?.Value" />
        <meta name="user-name" content="@(User.FindFirst("FullName")?.Value ?? User.Identity.Name)" />
    }

    <!-- Load page loader script -->
    <script src="~/js/components/loader.js"></script>
</head>

<body>
    <!-- Display toast notifications from TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Include Header partial view -->
    @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml")

<div class="container chat-container">
    <div class="row h-100">
        <!-- Chat Users Sidebar -->
        <div class="col-md-4 col-lg-3 chat-sidebar">
            <div class="d-flex align-items-center p-3 border-bottom">
                <h5 class="mb-0">
                    <i class="fas fa-comments me-2"></i>
                    Messages
                </h5>
            </div>
              <div class="chat-users-list">
                @if (Model != null && Model.Users.Any())
                {
                    @foreach (var user in Model.Users)
                    {
                        <div class="chat-user-item p-3" data-user-id="@user.UserId" 
                             onclick="openChat('@user.UserId')">
                            <div class="d-flex align-items-center">
                                <div class="position-relative me-3">
                                    @if (!string.IsNullOrEmpty(user.UserImage))
                                    {
                                        <img src="@(user.UserImage.StartsWith("/") ? user.UserImage : "/SharedMedia/avatars/" + user.UserImage)" alt="@user.Username" 
                                             class="rounded-circle" width="50" height="50">
                                    }
                                    else
                                    {
                                        <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white" 
                                             style="width: 50px; height: 50px;">
                                            @user.Username.Substring(0, 1).ToUpper()
                                        </div>
                                    }
                                    <span class="position-absolute bottom-0 end-0 bg-success border border-white rounded-circle user-status" 
                                          style="width: 15px; height: 15px;" data-user-id="@user.UserId"></span>
                                </div>                                <div class="flex-grow-1">
                                    <h6 class="mb-0">@user.Username</h6>
                                    <small class="text-muted">@@@user.Username</small>
                                    @if (!string.IsNullOrEmpty(user.LastMessage))
                                    {
                                        <div class="text-muted small">
                                            <span>@user.LastMessage</span>
                                        </div>
                                    }
                                </div>
                                <div class="text-end">
                                    <span class="unread-count" data-user-id="@user.UserId" style="display: none;">0</span>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="chat-empty-state">
                        <i class="fas fa-users"></i>
                        <p>No users available to chat with.</p>
                        <small>Enroll in courses or create courses to start chatting with instructors and learners.</small>
                    </div>
                }
            </div>
        </div>

        <!-- Chat Welcome Area -->
        <div class="col-md-8 col-lg-9 d-flex flex-column h-100">
            <div class="flex-grow-1 d-flex align-items-center justify-content-center">
                <div class="chat-welcome">
                    <i class="fas fa-comment-dots fa-5x"></i>
                    <h3>Welcome to BrainStormEra Chat</h3>
                    <p class="lead">Select a user from the left to start a conversation</p>
                    <div class="mt-4">
                        <small class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            You can chat with instructors of courses you're enrolled in, or learners who have enrolled in your courses.
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    <!-- Include Footer partial view -->
    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")

    @* Include Chatbot for authenticated users *@
    @await Html.PartialAsync("_Chatbot")

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/components/chat.js" asp-append-version="true"></script>
    <script src="~/js/shared/toast-notifications.js" asp-append-version="true"></script>
    <script src="~/js/utils/site.js" asp-append-version="true"></script>
    <script src="~/js/utils/secure-logout.js" asp-append-version="true"></script>
    <script src="~/js/imageErrorHandler.js" asp-append-version="true"></script>

    @* Notification System for logged in users *@
    @if (User.Identity?.IsAuthenticated == true)
    {
        <script src="~/js/shared/notification-system.js" asp-append-version="true"></script>
        <script src="~/js/components/chatbot.js" asp-append-version="true"></script>
        @await Html.PartialAsync("_ChatSignalR")
    }

    <script>
        // Update unread counts on page load
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof chatSystem !== 'undefined') {
                chatSystem.updateUnreadCounts();
                
                // Update every 30 seconds
                setInterval(() => chatSystem.updateUnreadCounts(), 30000);
            }
        });
    </script>
</body>
</html>