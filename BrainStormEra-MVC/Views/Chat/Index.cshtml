@model BusinessLogicLayer.DTOs.Chat.ChatIndexViewModel
@{
    ViewData["Title"] = "Chat";
    Layout = null;
    var currentUserId = Model.CurrentUserId;
    var users = Model.Users ?? new List<BusinessLogicLayer.DTOs.Chat.ChatUserDTO>();
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat - BrainStormEra</title>
    <meta name="description" content="BrainStormEra Chat - Connect with instructors and learners">
    <link rel="icon" type="image/x-icon" href="~/SharedMedia/logo/logowithoutbackground.png" sizes="48x48">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/global.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layouts/base.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layouts/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/header.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/chatbot.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/payment.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/placeholders.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/loader.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/chat.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BrainStormEra.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/pages/HomePage/enhanced-home.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/toast-notifications.css">

    @* User authentication meta tags for JavaScript access *@
    @if (User.Identity?.IsAuthenticated == true)
    {
        <meta name="user-id" content="@User.FindFirst("UserId")?.Value" />
        <meta name="user-role" content="@User.FindFirst("UserRole")?.Value" />
        <meta name="user-name" content="@(User.FindFirst("FullName")?.Value ?? User.Identity.Name)" />
    }

    <!-- Load page loader script -->
    <script src="~/js/components/loader.js"></script>
</head>

<body>
    <!-- Display toast notifications from TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div data-toast-success="@TempData["SuccessMessage"]" style="display:none;"></div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div data-toast-error="@TempData["ErrorMessage"]" style="display:none;"></div>
    }
    @if (TempData["WarningMessage"] != null)
    {
        <div data-toast-warning="@TempData["WarningMessage"]" style="display:none;"></div>
    }
    @if (TempData["InfoMessage"] != null)
    {
        <div data-toast-info="@TempData["InfoMessage"]" style="display:none;"></div>
    }

    <!-- Include Header partial view -->
    @await Html.PartialAsync("~/Views/Shared/Header/_Header.cshtml")

<div class="container chat-container">
    <div class="row h-100">
        <!-- Chat Users Sidebar -->
        <div class="col-md-4 col-lg-3 chat-sidebar">
            <div class="d-flex align-items-center p-3 border-bottom">
                <button onclick="history.back()" class="btn btn-outline-secondary btn-sm me-2">
                    <i class="fas fa-arrow-left"></i>
                </button>
                <h5 class="mb-0">
                    <i class="fas fa-comments me-2"></i>
                    Messages
                </h5>
            </div>
            
            <div class="chat-users-list">
                @if (users.Any())
                {
                    @foreach (var user in users)
                    {
                        <div class="chat-user-item p-3" data-user-id="@user.UserId" onclick="openChat('@user.UserId')">
                            <div class="d-flex align-items-center">
                                <div class="position-relative me-3">
                                    @if (!string.IsNullOrEmpty(user.UserImage))
                                    {
                                        <img src="@(user.UserImage.StartsWith("/") ? user.UserImage : "/SharedMedia/avatars/" + user.UserImage)" alt="@user.Username" 
                                             class="rounded-circle" width="40" height="40">
                                    }
                                    else
                                    {
                                        <div class="rounded-circle bg-primary d-flex align-items-center justify-content-center text-white" 
                                             style="width: 40px; height: 40px;">
                                            @user.Username.Substring(0, 1).ToUpper()
                                        </div>
                                    }
                                    <span class="position-absolute bottom-0 end-0 bg-success border border-white rounded-circle user-status" 
                                          style="width: 12px; height: 12px;" data-user-id="@user.UserId"></span>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="mb-0 text-truncate">@user.Username</h6>
                                    <small class="text-muted">@@@user.Username</small>
                                    <div class="text-muted small">
                                        <span class="badge bg-info me-1">@user.UserRole</span>
                                        @if (user.CourseRelationships.Any())
                                        {
                                            <span class="text-success">
                                                <i class="fas fa-graduation-cap me-1"></i>
                                                @user.CourseRelationships.Count course@(user.CourseRelationships.Count > 1 ? "s" : "")
                                            </span>
                                        }
                                    </div>
                                    @if (!string.IsNullOrEmpty(user.LastMessage))
                                    {
                                        <div class="text-truncate text-muted small">
                                            @user.LastMessage
                                        </div>
                                    }
                                    @if (user.CourseRelationships.Any())
                                    {
                                        <div class="course-relationships mt-1">
                                            @foreach (var course in user.CourseRelationships.Take(2))
                                            {
                                                <div class="course-badge small">
                                                    <span class="badge @(course.RelationshipType == "Enrolled" ? "bg-primary" : "bg-success") me-1">
                                                        @course.RelationshipType
                                                    </span>
                                                    <span class="text-muted">@course.CourseName</span>
                                                    @if (course.RelationshipType == "Enrolled")
                                                    {
                                                        <span class="text-info small">(@course.ProgressPercentage.ToString("F0")%)</span>
                                                    }
                                                </div>
                                            }
                                            @if (user.CourseRelationships.Count > 2)
                                            {
                                                <div class="text-muted small">
                                                    +@(user.CourseRelationships.Count - 2) more course@((user.CourseRelationships.Count - 2) > 1 ? "s" : "")
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                                <div class="text-end">
                                    @if (user.UnreadCount > 0)
                                    {
                                        <span class="badge bg-danger rounded-pill unread-count" data-user-id="@user.UserId">
                                            @user.UnreadCount
                                        </span>
                                    }
                                    @if (user.LastMessageTime.HasValue)
                                    {
                                        <div class="text-muted small">
                                            @user.LastMessageTime.Value.ToString("HH:mm")
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="p-4 text-center">
                        <i class="fas fa-users fa-3x text-muted mb-3"></i>
                        <h6 class="text-muted">No course connections yet</h6>
                        <p class="text-muted small">
                            @if (User.IsInRole("learner"))
                            {
                                <span>Enroll in courses to chat with instructors.</span>
                            }
                            else if (User.IsInRole("instructor"))
                            {
                                <span>Students will appear here once they enroll in your courses.</span>
                            }
                            else
                            {
                                <span>Start connecting with other users through courses to see them here.</span>
                            }
                        </p>
                    </div>
                }
            </div>
        </div>

        <!-- Chat Main Area -->
        <div class="col-md-8 col-lg-9 chat-main">
            <div class="flex-grow-1 d-flex align-items-center justify-content-center">
                <div class="chat-empty-state">
                    <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                    <h4>Course-Based Chat</h4>
                    <p>Connect with users through your course relationships.</p>
                    @if (!users.Any())
                    {
                        <div class="mt-3">
                            @if (User.IsInRole("learner"))
                            {
                                <p class="text-muted">You can chat with instructors whose courses you've enrolled in.</p>
                                <a href="@Url.Action("Index", "Course")" class="btn btn-primary">
                                    <i class="fas fa-search me-1"></i>
                                    Browse Courses
                                </a>
                            }
                            else if (User.IsInRole("instructor"))
                            {
                                <p class="text-muted">Students will appear here once they enroll in your courses.</p>
                                <a href="@Url.Action("CreateCourse", "Course")" class="btn btn-primary">
                                    <i class="fas fa-plus me-1"></i>
                                    Create Course
                                </a>
                            }
                            else
                            {
                                <p class="text-muted">Start connecting with other users through courses.</p>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted small">Select a user from the list to start a conversation.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

    <!-- Include Footer partial view -->
    @await Html.PartialAsync("~/Views/Shared/Footer/_Footer.cshtml")



    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/shared/toast-notifications.js" asp-append-version="true"></script>
    <script src="~/js/utils/site.js" asp-append-version="true"></script>
    <script src="~/js/utils/secure-logout.js" asp-append-version="true"></script>
    <script src="~/js/imageErrorHandler.js" asp-append-version="true"></script>

    @* Notification System for logged in users *@
    @if (User.Identity?.IsAuthenticated == true)
    {
        <script src="~/js/shared/notification-system.js" asp-append-version="true"></script>

        @await Html.PartialAsync("_ChatSignalR")
    }

    <script>
        // Function to open chat with a specific user
        function openChat(userId) {
            window.location.href = '@Url.Action("Conversation", "Chat")?userId=' + userId;
        }

        // Set current user for chat system
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize any chat-related functionality here
            console.log('Chat Index page loaded');
        });
    </script>
</body>
</html> 