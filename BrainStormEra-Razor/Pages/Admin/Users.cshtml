@page "/admin/users"
@model BrainStormEra_Razor.Pages.Admin.UsersModel
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/admin/dashboard.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/admin/components.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
    <style>
        .users-management {
            padding: 20px;
        }
        
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #e9ecef;
        }
        
        .filters-section {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 30px;
        }
        
        .filters-row {
            display: flex;
            gap: 20px;
            align-items: end;
        }
        
        .filter-group {
            flex: 1;
        }
        
        .filter-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: #495057;
        }
        
        .filter-group input,
        .filter-group select {
            width: 100%;
            padding: 8px 12px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            font-size: 14px;
        }
        
        .filter-actions {
            display: flex;
            gap: 10px;
        }
        
        .btn-filter {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-clear {
            background: #6c757d;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-auto-search {
            background: #6c757d;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            transition: all 0.3s ease;
        }
        
        .btn-auto-search.active {
            background: #28a745 !important;
        }
        
        .btn-auto-search:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
        
        .filter-input, .filter-select {
            transition: border-color 0.3s ease;
        }
        
        .filter-input:focus, .filter-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        
        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .stat-card.total { border-left-color: #007bff; }
        .stat-card.admins { border-left-color: #dc3545; }
        .stat-card.instructors { border-left-color: #ffc107; }
        .stat-card.learners { border-left-color: #28a745; }
        .stat-card.banned { border-left-color: #6c757d; }
        
        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .stat-label {
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .users-table {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .table-header {
            background: #f8f9fa;
            padding: 20px;
            border-bottom: 1px solid #dee2e6;
        }
        
        .table-title {
            margin: 0;
            color: #495057;
        }
        
        .table-responsive {
            overflow-x: auto;
        }
        
        .users-table table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .users-table th,
        .users-table td {
            padding: 15px;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }
        
        .users-table th {
            background: #f8f9fa;
            font-weight: 600;
            color: #495057;
        }
        
        .user-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
        }
        
        .user-details h6 {
            margin: 0 0 4px 0;
            font-weight: 600;
        }
        
        .user-details small {
            color: #6c757d;
        }
        
        .role-badge {
            padding: 4px 8px;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-badge {
            padding: 4px 8px;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
        }
        
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-banned {
            background: #f8d7da;
            color: #721c24;
        }
        
        .action-buttons {
            display: flex;
            gap: 8px;
        }
        
        .btn-action {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.8rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 4px;
        }
        
        .btn-view {
            background: #007bff;
            color: white;
        }
        
        .btn-ban {
            background: #ffc107;
            color: #212529;
        }
        
        .btn-unban {
            background: #28a745;
            color: white;
        }
        
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
        }
        
        .pagination a,
        .pagination span {
            padding: 8px 12px;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            text-decoration: none;
            color: #007bff;
        }
        
        .pagination .current {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }
        
        .no-users {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }
    </style>
}

<div class="users-management">
    <!-- Page Header -->
    @{
        var pageHeaderModel = new PageHeaderViewModel
        {
            Title = "User Management",
            Description = "Manage system users, roles, and permissions",
            Icon = "fa-users",
            Actions = new List<PageActionViewModel>
            {
                new PageActionViewModel
                {
                    Text = "Back to Dashboard",
                    Url = "/admin",
                    Icon = "fa-arrow-left",
                    CssClass = "btn-filter"
                }
            }
        };
    }
    @await Html.PartialAsync("Admin/_PageHeader", pageHeaderModel)

    <!-- Statistics Cards -->
    @{
        var userStatsModel = new List<StatCardViewModel>
        {
            new StatCardViewModel
            {
                Value = Model.UsersData.TotalUsers.ToString(),
                Label = "Total Users",
                CssClass = "total"
            },
            new StatCardViewModel
            {
                Value = Model.UsersData.TotalAdmins.ToString(),
                Label = "Admins",
                CssClass = "admins"
            },
            new StatCardViewModel
            {
                Value = Model.UsersData.TotalInstructors.ToString(),
                Label = "Instructors",
                CssClass = "instructors"
            },
            new StatCardViewModel
            {
                Value = Model.UsersData.TotalLearners.ToString(),
                Label = "Learners",
                CssClass = "learners"
            },
            new StatCardViewModel
            {
                Value = Model.UsersData.BannedUsers.ToString(),
                Label = "Banned Users",
                CssClass = "banned"
            }
        };
    }
    <div class="stats-cards">
        @await Html.PartialAsync("Admin/_StatsCards", userStatsModel)
    </div>

    <!-- Filters Section -->
    @{
        var filtersModel = new FilterSectionViewModel
        {
            ActionUrl = "/admin/users",
            ClearUrl = "/admin/users",
            Filters = new List<FilterViewModel>
            {
                new FilterViewModel
                {
                    Name = "SearchQuery",
                    Label = "Search Users",
                    Type = FilterType.Text,
                    Value = Model.SearchQuery,
                    Placeholder = "Search by name, email, or username..."
                },
                new FilterViewModel
                {
                    Name = "RoleFilter",
                    Label = "Role Filter",
                    Type = FilterType.Select,
                    Value = Model.RoleFilter,
                    Options = new List<FilterOptionViewModel>
                    {
                        new FilterOptionViewModel { Value = "", Text = "All Roles" },
                        new FilterOptionViewModel { Value = "admin", Text = "Admin" },
                        new FilterOptionViewModel { Value = "instructor", Text = "Instructor" },
                        new FilterOptionViewModel { Value = "learner", Text = "Learner" }
                    }
                },
                new FilterViewModel
                {
                    Name = "StatusFilter",
                    Label = "Status Filter",
                    Type = FilterType.Select,
                    Value = Model.StatusFilter,
                    Options = new List<FilterOptionViewModel>
                    {
                        new FilterOptionViewModel { Value = "", Text = "All Status" },
                        new FilterOptionViewModel { Value = "active", Text = "Active Users" },
                        new FilterOptionViewModel { Value = "banned", Text = "Banned Users" }
                    }
                },
                new FilterViewModel
                {
                    Name = "PageSize",
                    Label = "Items per page",
                    Type = FilterType.Select,
                    Value = Model.PageSize.ToString(),
                    Options = new List<FilterOptionViewModel>
                    {
                        new FilterOptionViewModel { Value = "10", Text = "10" },
                        new FilterOptionViewModel { Value = "25", Text = "25" },
                        new FilterOptionViewModel { Value = "50", Text = "50" }
                    }
                }
            }
        };
    }
    @await Html.PartialAsync("Admin/_FilterSection", filtersModel)

    <!-- Users Table -->
    @{
        var paginationModel = new PaginationViewModel
        {
            CurrentPage = Model.CurrentPage,
            TotalPages = Model.UsersData.TotalPages,
            PageSize = Model.PageSize,
            BaseUrl = "/admin/users",
            QueryParameters = new Dictionary<string, string?>
            {
                { "SearchQuery", Model.SearchQuery },
                { "RoleFilter", Model.RoleFilter },
                { "StatusFilter", Model.StatusFilter },
                { "PageSize", Model.PageSize.ToString() }
            }
        };
    }
    
    <div class="users-table">
        <div class="table-header">
            <h3 class="table-title">Users List (@Model.UsersData.TotalUsers total)</h3>
        </div>
        
        @if (Model.UsersData.Users.Any())
        {
            <div class="table-responsive">
                <table>
                    <thead>
                        <tr>
                            <th>User</th>
                            <th>Role</th>
                            <th>Status</th>
                            <th>Join Date</th>
                            <th>Last Login</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.UsersData.Users)
                        {
                            <tr>
                                <td>
                                    <div class="user-info">
                                        <img src="@user.UserImage" alt="@user.FullName" class="user-avatar"
                                             onerror="this.onerror=null; this.src='/SharedMedia/defaults/default-avatar.svg';" />
                                        <div class="user-details">
                                            <h6>@user.FullName</h6>
                                            <small>@user.UserEmail</small>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="role-badge @user.RoleBadgeClass">@user.UserRole</span>
                                </td>
                                <td>
                                    <span class="status-badge @(user.IsBanned ? "status-banned" : "status-active")">
                                        @user.StatusText
                                    </span>
                                </td>
                                <td>@user.AccountCreatedAt.ToString("MMM dd, yyyy")</td>
                                <td>@(user.LastLoginDate?.ToString("MMM dd, yyyy") ?? "Never")</td>
                                <td>
                                    <div class="action-buttons">
                                        <a href="/admin/users/@user.UserId" class="btn-action btn-view">
                                            <i class="fas fa-eye"></i> View
                                        </a>
                                        @if (user.IsBanned)
                                        {
                                            <button type="button" class="btn-action btn-unban" 
                                                    onclick="updateUserStatus('@user.UserId', false)">
                                                <i class="fas fa-unlock"></i> Unban
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn-action btn-ban" 
                                                    onclick="updateUserStatus('@user.UserId', true)">
                                                <i class="fas fa-ban"></i> Ban
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @await Html.PartialAsync("Admin/_Pagination", paginationModel)
        }
        else
        {
            <div class="no-users">
                <i class="fas fa-users fa-3x text-muted mb-3"></i>
                <h5>No users found</h5>
                <p>Try adjusting your search criteria or filters.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/js/admin/shared-functions.js" asp-append-version="true"></script>
    <script>
        function updateUserStatus(userId, isBanned) {
            const action = isBanned ? 'ban' : 'unban';
            if (confirm(`Are you sure you want to ${action} this user?`)) {
                fetch('/admin/users?handler=UpdateUserStatus', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ userId: userId, isBanned: isBanned })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating user status');
                });
            }
        }


    </script>
} 