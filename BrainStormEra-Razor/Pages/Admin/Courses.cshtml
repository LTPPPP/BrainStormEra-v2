@page "/admin/courses"
@model BrainStormEra_Razor.Pages.Admin.CoursesModel
@{
    ViewData["Title"] = "Course Management";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/Admin/course-management.css" asp-append-version="true" />
}

<div class="courses-management">
    <!-- Page Header with Hero Content Layout -->
    <div class="page-header">
        <div class="hero-background"></div>
        <div class="hero-content">
            <div class="welcome-section">
                <div class="welcome-text">
                    <h1 class="hero-title"><i class="fas fa-graduation-cap"></i> Course Management</h1>
                    <p class="hero-subtitle">Manage course approvals, content moderation, and instructor oversight</p>
                </div>
            </div>
            <div class="dashboard-actions">
                <a href="/admin" class="action-btn secondary">
                    <i class="fas fa-arrow-left"></i> Back to Dashboard
                </a>
            </div>
            <div class="quick-stats">
                <div class="stat-badge">
                    <span class="stat-value">@Model.CoursesData.TotalCourses</span>
                    <span class="stat-label">Total</span>
                </div>
                <div class="stat-badge">
                    <span class="stat-value">@Model.CoursesData.PendingCourses</span>
                    <span class="stat-label">Pending</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-cards">
        <div class="stat-card total">
            <div class="stat-number">@Model.CoursesData.TotalCourses</div>
            <div class="stat-label">Total Courses</div>
        </div>
        <div class="stat-card approved">
            <div class="stat-number">@Model.CoursesData.ApprovedCourses</div>
            <div class="stat-label">Approved</div>
        </div>
        <div class="stat-card pending">
            <div class="stat-number">@Model.CoursesData.PendingCourses</div>
            <div class="stat-label">Pending Review</div>
        </div>
        <div class="stat-card rejected">
            <div class="stat-number">@Model.CoursesData.RejectedCourses</div>
            <div class="stat-label">Rejected</div>
        </div>
        <div class="stat-card revenue">
            <div class="stat-number">$@Model.CoursesData.TotalRevenue.ToString("N0")</div>
            <div class="stat-label">Total Revenue</div>
        </div>
    </div>

    <!-- Enhanced Filters Section -->
    <div class="filters-section">
        <form method="get" asp-page="/Admin/Courses">
            <div class="filters-row">
                <div class="filter-group">
                    <label for="SearchQuery">
                        <i class="fas fa-search"></i> Search Courses
                    </label>
                    <input type="text" id="SearchQuery" name="SearchQuery" value="@Model.SearchQuery" 
                           placeholder="Search by name, instructor, or description..." />
                </div>
                
                <div class="filter-group">
                    <label for="CategoryFilter">
                        <i class="fas fa-tags"></i> Category
                    </label>
                    <select id="CategoryFilter" name="CategoryFilter">
                        <option value="">All Categories</option>
                        <option value="programming" selected="@(Model.CategoryFilter == "programming")">Programming</option>
                        <option value="design" selected="@(Model.CategoryFilter == "design")">Design</option>
                        <option value="business" selected="@(Model.CategoryFilter == "business")">Business</option>
                        <option value="marketing" selected="@(Model.CategoryFilter == "marketing")">Marketing</option>
                        <option value="language" selected="@(Model.CategoryFilter == "language")">Language</option>
                        <option value="science" selected="@(Model.CategoryFilter == "science")">Science</option>
                        <option value="arts" selected="@(Model.CategoryFilter == "arts")">Arts</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="StatusFilter">
                        <i class="fas fa-check-circle"></i> Status
                    </label>
                    <select id="StatusFilter" name="StatusFilter">
                        <option value="">All Status</option>
                        <option value="pending" selected="@(Model.StatusFilter == "pending")">Pending Review</option>
                        <option value="approved" selected="@(Model.StatusFilter == "approved")">Approved</option>
                        <option value="rejected" selected="@(Model.StatusFilter == "rejected")">Rejected</option>
                        <option value="banned" selected="@(Model.StatusFilter == "banned")">Banned</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="PriceFilter">
                        <i class="fas fa-dollar-sign"></i> Price Range
                    </label>
                    <select id="PriceFilter" name="PriceFilter">
                        <option value="">All Prices</option>
                        <option value="free" selected="@(Model.PriceFilter == "free")">Free</option>
                        <option value="0-50" selected="@(Model.PriceFilter == "0-50")">$0 - $50</option>
                        <option value="50-100" selected="@(Model.PriceFilter == "50-100")">$50 - $100</option>
                        <option value="100-200" selected="@(Model.PriceFilter == "100-200")">$100 - $200</option>
                        <option value="200+" selected="@(Model.PriceFilter == "200+")">$200+</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="DifficultyFilter">
                        <i class="fas fa-signal"></i> Difficulty
                    </label>
                    <select id="DifficultyFilter" name="DifficultyFilter">
                        <option value="">All Levels</option>
                        <option value="1" selected="@(Model.DifficultyFilter == "1")">Beginner</option>
                        <option value="2" selected="@(Model.DifficultyFilter == "2")">Intermediate</option>
                        <option value="3" selected="@(Model.DifficultyFilter == "3")">Advanced</option>
                        <option value="4" selected="@(Model.DifficultyFilter == "4")">Expert</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="SortBy">
                        <i class="fas fa-sort"></i> Sort By
                    </label>
                    <select id="SortBy" name="SortBy">
                        <option value="newest" selected="@(Model.SortBy == "newest")">Newest First</option>
                        <option value="oldest" selected="@(Model.SortBy == "oldest")">Oldest First</option>
                        <option value="price-low" selected="@(Model.SortBy == "price-low")">Price: Low to High</option>
                        <option value="price-high" selected="@(Model.SortBy == "price-high")">Price: High to Low</option>
                        <option value="popularity" selected="@(Model.SortBy == "popularity")">Most Popular</option>
                        <option value="rating" selected="@(Model.SortBy == "rating")">Highest Rated</option>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="PageSize">
                        <i class="fas fa-list"></i> Items per page
                    </label>
                    <select id="PageSize" name="PageSize">
                        <option value="12" selected="@(Model.PageSize == 12)">12</option>
                        <option value="24" selected="@(Model.PageSize == 24)">24</option>
                        <option value="48" selected="@(Model.PageSize == 48)">48</option>
                        <option value="96" selected="@(Model.PageSize == 96)">96</option>
                    </select>
                </div>

                <div class="filter-actions">
                    <button type="submit" class="btn-filter">
                        <i class="fas fa-search"></i> Apply Filters
                    </button>
                    <a href="/admin/courses" class="btn-clear">
                        <i class="fas fa-times"></i> Clear All
                    </a>
                </div>
            </div>
        </form>
    </div>

    <!-- Courses Grid -->
    @if (Model.CoursesData.Courses.Any())
    {
        <div class="courses-grid">
            @foreach (var course in Model.CoursesData.Courses)
            {
                <div class="course-card">
                    <div class="course-image">
                        <img src="@course.CoursePicture" alt="@course.CourseName"
                             onerror="this.onerror=null; this.src='/SharedMedia/defaults/default-course.svg';" />
                        <div class="course-status-overlay">
                            <span class="status-badge @course.StatusBadgeClass">
                                <i class="@(course.StatusText.ToLower() switch {
                                    "approved" => "fas fa-check-circle",
                                    "pending" => "fas fa-clock",
                                    "rejected" => "fas fa-times-circle",
                                    "banned" => "fas fa-ban",
                                    "draft" => "fas fa-edit",
                                    _ => "fas fa-question-circle"
                                })"></i>
                                @course.StatusText
                            </span>
                        </div>
                    </div>
                    <div class="course-content">
                        <h3 class="course-title">@course.CourseName</h3>
                        <div class="course-instructor">
                            <i class="fas fa-user"></i> @course.InstructorName
                        </div>
                        <div class="course-stats">
                            <span><i class="fas fa-users"></i> @course.EnrollmentCount</span>
                            <span><i class="fas fa-star"></i> @course.AverageRating.ToString("F1")</span>
                            <span><i class="fas fa-comments"></i> @course.ReviewCount</span>
                        </div>
                        <div class="course-price">@course.PriceText</div>
                        <div class="course-actions">
                            <button type="button" class="btn-action btn-details" 
                                    data-course-id="@course.CourseId">
                                <i class="fas fa-eye"></i> Details
                            </button>
                            
                            @switch (course.StatusText.ToLower())
                            {
                                case "pending":
                                    <button type="button" class="btn-action btn-approve" 
                                            data-course-id="@course.CourseId"
                                            data-course-name="@course.CourseName">
                                        <i class="fas fa-check"></i> Approve
                                    </button>
                                    <button type="button" class="btn-action btn-reject" 
                                            data-course-id="@course.CourseId"
                                            data-course-name="@course.CourseName">
                                        <i class="fas fa-times"></i> Reject
                                    </button>
                                    <button type="button" class="btn-action btn-ban" 
                                            data-course-id="@course.CourseId"
                                            data-course-name="@course.CourseName">
                                        <i class="fas fa-ban"></i> Ban
                                    </button>
                                    break;
                                    
                                case "approved":
                                    <button type="button" class="btn-action btn-ban" 
                                            data-course-id="@course.CourseId"
                                            data-course-name="@course.CourseName">
                                        <i class="fas fa-ban"></i> Ban
                                    </button>
                                    <span class="btn-action btn-details disabled approved-indicator">
                                        <i class="fas fa-check-circle"></i> Approved
                                    </span>
                                    break;
                                    
                                case "rejected":
                                    <button type="button" class="btn-action btn-approve" 
                                            data-course-id="@course.CourseId"
                                            data-course-name="@course.CourseName">
                                        <i class="fas fa-check"></i> Approve
                                    </button>
                                    <button type="button" class="btn-action btn-ban" 
                                            data-course-id="@course.CourseId"
                                            data-course-name="@course.CourseName">
                                        <i class="fas fa-ban"></i> Ban
                                    </button>
                                    break;
                                    
                                case "banned":
                                    <span class="btn-action btn-details disabled banned-indicator">
                                        <i class="fas fa-ban"></i> Course Banned
                                    </span>
                                    break;
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Enhanced Pagination -->
        @if (Model.CoursesData.TotalPages > 1)
        {
            <div class="pagination">
                @if (Model.CoursesData.HasPreviousPage)
                {
                    <a href="?SearchQuery=@Model.SearchQuery&CategoryFilter=@Model.CategoryFilter&StatusFilter=@Model.StatusFilter&PriceFilter=@Model.PriceFilter&DifficultyFilter=@Model.DifficultyFilter&SortBy=@Model.SortBy&PageSize=@Model.PageSize&CurrentPage=@(Model.CurrentPage - 1)">
                        <i class="fas fa-chevron-left"></i> Previous
                    </a>
                }

                @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.CoursesData.TotalPages, Model.CurrentPage + 2); i++)
                {
                    @if (i == Model.CurrentPage)
                    {
                        <span class="current">@i</span>
                    }
                    else
                    {
                        <a href="?SearchQuery=@Model.SearchQuery&CategoryFilter=@Model.CategoryFilter&StatusFilter=@Model.StatusFilter&PriceFilter=@Model.PriceFilter&DifficultyFilter=@Model.DifficultyFilter&SortBy=@Model.SortBy&PageSize=@Model.PageSize&CurrentPage=@i">@i</a>
                    }
                }

                @if (Model.CoursesData.HasNextPage)
                {
                    <a href="?SearchQuery=@Model.SearchQuery&CategoryFilter=@Model.CategoryFilter&StatusFilter=@Model.StatusFilter&PriceFilter=@Model.PriceFilter&DifficultyFilter=@Model.DifficultyFilter&SortBy=@Model.SortBy&PageSize=@Model.PageSize&CurrentPage=@(Model.CurrentPage + 1)">
                        Next <i class="fas fa-chevron-right"></i>
                    </a>
                }
            </div>
        }
    }
    else
    {
        <div class="no-courses">
            <i class="fas fa-graduation-cap fa-4x"></i>
            <h5>No courses found</h5>
            <p>Try adjusting your search criteria or filters to find courses.</p>
            <a href="/admin/courses" class="btn-filter">
                <i class="fas fa-refresh"></i> Reset Filters
            </a>
        </div>
    }
</div>

<!-- Anti-forgery token for AJAX requests -->
@Html.AntiForgeryToken()

@section Scripts {
    <script src="~/js/pages/Admin/course-management.js" asp-append-version="true"></script>
} 